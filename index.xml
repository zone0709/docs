<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop.com/</link>
    <description>Recent content in Home on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://devdocs.prestashop.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Additional list parameters</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/advanced-use/additional-list-parameters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/advanced-use/additional-list-parameters/</guid>
      <description>Additional list parameters Previous tutorials only use simple list that returns the IDs of the resources, but you can actually get more details, sort and filter the list.
Display parameter You can specify which fields you want for each resource using the display parameter.
   Key Value Result     display full Returns all the fields of the resource    [field1,field2,...] Returns only the fields specified in this array       Result API call PHP Webservice lib options     Include all fields from the products resource /api/products/?</description>
    </item>
    
    <item>
      <title>Basic checks</title>
      <link>https://devdocs.prestashop.com/1.7/modules/testing/basic-checks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/testing/basic-checks/</guid>
      <description>Basic checks Syntax check First of all, making sure your file is understood by PHP is a trivial but critical check. PHP provides a linter to verify a file can be run:
$ php -l &amp;lt;file&amp;gt; Syntax check only (lint) The linter can be run on a whole project if a list of files to check is created. On a Linux bash, this command looks for all the PHP files (except in folders vendor and tests) then runs the linter on each of them:</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/configuration/</guid>
      <description>Configuration Data can be saved in the shop database without requiring a module specific table to be created.
The table configuration contains a list of key =&amp;gt; value(s) properties which can be accessed from anywhere, including in a module. The Configuration class is the interface allowing each module developer to get or store data in this table.
Store configuration data &amp;lt;?php Configuration::updateValue(string $key, mixed $value); $key will be the reference to your data to reuse later.</description>
    </item>
    
    <item>
      <title>Create your custom form factory</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/work-with-search-form/custom-form-factory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/work-with-search-form/custom-form-factory/</guid>
      <description>Create your custom form factory In some cases the generic form factory is not enough for your need. In PrestaShop the category grid has three specific features:
 it can manage a parent category which changes the grid rendering (only displays children) so it needs to dynamically add a parameter its search url doesn&amp;rsquo;t match the list so it needs to specify the form action the redirection url is dynamic so that it takes the parent category into account  To manage this additional behaviour we create a decorator that uses the default form factory but adds specific behaviour.</description>
    </item>
    
    <item>
      <title>Creating access to the Webservice</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/creating-access/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/creating-access/</guid>
      <description>Creating access to the Webservice Enable the webservice By default, the webservice feature is disabled on PrestaShop and needs to be switched on before the first use.
Via the user interface Go in the PrestaShop back office, open the &amp;ldquo;Web service&amp;rdquo; page under the &amp;ldquo;Advanced Parameters&amp;rdquo; menu, and then choose &amp;ldquo;Yes&amp;rdquo; for the &amp;ldquo;Enable PrestaShop Webservice&amp;rdquo; option.
  Enabling Webservice   Programatically The Webservice switch is stored in the configuration table of PrestaShop.</description>
    </item>
    
    <item>
      <title>Db class</title>
      <link>https://devdocs.prestashop.com/1.7/development/database/db/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/database/db/</guid>
      <description>Using the database with the Db class Get link to the database &amp;lt;?php /** * @var \Db $db */ $db = \Db::getInstance(); The first call to this method initialize the link to the database, and return the same link to all the next calls. $db in this example will be reused in all the next examples.
Db class methods Execute a raw SQL request (SELECT only) &amp;lt;?php $request = &amp;#39;SELECT `id_table` FROM `&amp;#39; .</description>
    </item>
    
    <item>
      <title>Grid and identifiable object form hooks usage example</title>
      <link>https://devdocs.prestashop.com/1.7/modules/sample-modules/grid-and-identifiable-object-form-hooks-usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/sample-modules/grid-and-identifiable-object-form-hooks-usage/</guid>
      <description>Grid and identifiable object form hooks usage example  Introduction In this tutorial we are going to build module which extends customers list with one extra column which can be toggled. It can have two states - turned on or off. In customer creation and edit form we will add switch which will also manage the same state. By following this tutorial you will learn how to:
 extend modern grids.</description>
    </item>
    
    <item>
      <title>Guidelines and coding standards</title>
      <link>https://devdocs.prestashop.com/1.7/themes/getting-started/guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/getting-started/guidelines/</guid>
      <description>Guidelines and coding standards Compatibility PHP Code Your PHP code should be compatible with the following versions:
 PrestaShop 1.7.0  ~ 1.7.3  : at least PHP 5.4 PrestaShop 1.7.4  : at least PHP 5.6 PrestaShop 1.7.7  : at least PHP 7.1  HTML / CSS / Javascript Your HTML/CSS/JS code should work with at least:
 Edge Firefox 45 Chrome 29.  Mobile-wise:
 iOS 8.4 Android Browser 4.</description>
    </item>
    
    <item>
      <title>How issues are sorted</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/contribution-process/how-issues-are-sorted/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/contribution-process/how-issues-are-sorted/</guid>
      <description>How issues are sorted What happens to the issue you have reported PrestaShop Quality Assurance team (aka QA) uses a transparent definition for the criteria used to qualify issues&#39; severity, and how they should be applied through labels on github issues.
Please note that severity is to be distinguished from priority. Indeed, severity is used to measure the negative impact that a bug has on a system, a feature, a component or on the project development.</description>
    </item>
    
    <item>
      <title>How to use Bulk actions in Grid</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/work-with-bulk-actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/work-with-bulk-actions/</guid>
      <description>How to use Bulk actions in Grid? In addition to displaying data tables, Grid component also comes with a lot of additional functionality. One of it is Bulk actions.
What is Bulk action? Bulk action is action (e.g. Delete, Change status &amp;amp; etc) that can be performed on multiple entries in table. This is a common task when using Grid (e.g. Delete multiple selected Suppliers with a single click).
How to add Bulk actions to Grid?</description>
    </item>
    
    <item>
      <title>Internal and cross links</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/documentation/shortcodes/ref/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/documentation/shortcodes/ref/</guid>
      <description>Internal and cross links Cross links To link to another page in the documentation, use ref:
[This is a link to Configuration]({{&amp;lt; ref &amp;quot;1.7/basics/configuration.md&amp;quot; &amp;gt;}})  Rendered result:
This is a link to Configuration
 Don&amp;rsquo;t forget to put the link between double quotes. Internal links To a link that points to a specific point in the current page, use relref:
[This is a link to the first title]({{&amp;lt; relref &amp;quot;#cross-links&amp;quot; &amp;gt;}})  Rendered result:</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://devdocs.prestashop.com/1.7/modules/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/introduction/</guid>
      <description>Introduction Technical principles behind a module A PrestaShop module consists of a main PHP file with as many other PHP files as needed, as well as the necessary template (.tpl) files and assets (images, JavaScript, CSS, etc.) to display the module&amp;rsquo;s interface, whether to the customer (on the front office) or to the merchant (on the back office).
Any PrestaShop module, once installed on an online shop, can interact with one or more &amp;ldquo;hooks&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://devdocs.prestashop.com/1.7/testing/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/testing/introduction/</guid>
      <description>How testing works in PrestaShop  PrestaShop is a complex software and uses automated testing to ensure that the new additions to the codebase do not break existing behaviors.
Automated tests are located in tests and tests-legacy folders.
What kind of tests do PrestaShop use? In the tests folder, you will find:
 Unit tests Integration tests Web acceptance tests  Unit tests Unit tests are powered by PHPUnit. They test one and only one php class, mocking/stubbing any dependencies that class has.</description>
    </item>
    
    <item>
      <title>Minor release lifecycle</title>
      <link>https://devdocs.prestashop.com/1.7/project/release/patch-release-lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/release/patch-release-lifecycle/</guid>
      <description>Minor release lifecycle Kanban and scope Each minor version is defined by a feature scope, that is, a number of GitHub issues that we put in a version Kanban. How these issues are picked or sorted is the responsibility of the Product Team, who spends a lot of time gathering feedback from the PrestaShop community to make sure the next minor version addresses the most important needs.
For example PrestaShop 1.</description>
    </item>
    
    <item>
      <title>Module base creation</title>
      <link>https://devdocs.prestashop.com/1.7/modules/sample-modules/order-view-page-new-hooks/module-base/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/sample-modules/order-view-page-new-hooks/module-base/</guid>
      <description>Module base creation Composer autoloading Let&amp;rsquo;s create module folder demovieworderhooks inside modules directory (located in the root of PrestaShop project). Then create composer.json in the root of the module to autoload classes with the namespaces (PrestaShop\Module\DemoViewOrderHooks\) we define from the src folder (https://getcomposer.org/doc/01-basic-usage.md#autoloading). Using composer PSR-4 autoload helps us autoload classes without the need to use require_once __DIR__.&#39;/vendor/autoload.php&#39;; .
Even though using autoload block in composer.json helps us to autoload classes from the specified folder src with the namespace PrestaShop\\Module\\DemoViewOrderHooks\\ we might have some autoloading issues if we use our classes in our module main file demovieworderhooks.</description>
    </item>
    
    <item>
      <title>New translation system</title>
      <link>https://devdocs.prestashop.com/1.7/modules/creation/module-translation/new-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/creation/module-translation/new-system/</guid>
      <description>New module translation system  The new module translation system is based on the new system introduced in PrestaShop 1.7 for the Core and Native modules. It aims to harmonize translation systems throughout PrestaShop while providing backwards compatibility.
This feature is only available for PrestaShop 1.7.6 and later. If you need to support older versions, see the Classic translation system. Vocabulary  Wording – A string that you may want to translate.</description>
    </item>
    
    <item>
      <title>Setup library</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/prestashop-webservice-lib/setup-library/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/prestashop-webservice-lib/setup-library/</guid>
      <description>Setup library Now that your webservice is configured and accessible you might want to use it. To help you perform requests on your webservice, you can use the PHP library for PrestaShop Webservices.
Install the library Prerequisites  You need a server with mod_rewrite enabled You need the curl extension enabled in PHP  Installing with Composer If you are starting a new project you can init your composer project along with the dependency:</description>
    </item>
    
    <item>
      <title>Technical tools</title>
      <link>https://devdocs.prestashop.com/1.7/modules/sell/technical-tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/sell/technical-tools/</guid>
      <description>Technical Tools &amp;amp; Information Technical Tools: 3 tools to help you get off to a good start 1. The Validator The Validator ( https://validator.prestashop.com ) is a tool created to check if your module is technically compatible with the PrestaShop standards. You can:
 upload a zip. or specify the URL of your GitHub repository (that has to be public).  The Validator then automatically creates a detailed report explaining what needs to be improved/changed in your module.</description>
    </item>
    
    <item>
      <title>The Product Form before 1.7.8</title>
      <link>https://devdocs.prestashop.com/1.7/development/page-reference/back-office/product/form/product-form-before-1-7-8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/page-reference/back-office/product/form/product-form-before-1-7-8/</guid>
      <description>The Product Form before 1.7.8 The product form is divided into multiple sub forms, here is a list that defines each sub forms along with its fields:
Main form This form is created by the controller which combines a few different form types for each tab.
   Form type Fields Field type Description     ProductInformation   This Form type is used for step1 or &amp;ldquo;Basic settings&amp;rdquo; tab    type_product ChoiceType Type of product: Standard, virtual or Pack of Product    inputPackItems TypeaheadProductPackCollectionType List of products (for Pack of product)    name TranslateType Product name (localized)    description TranslateType Product description (localized)    description_short TranslateType Product short description (localized)    features CollectionType [ProductFeature] List of sub forms for product Feature entity    id_manufacturer ChoiceType One of the ManufacturerCore    active CheckboxType Boolean to indicate if Product is active    price_shortcut MoneyType Product price (tax excluded)    price_ttc_shortcut MoneyType Product price (tax included)    qty_0_shortcut NumberType Product stock quantity    categories ChoiceCategoriesTreeType List of associated categories    id_category_default ChoiceType One of the Category as default    new_category SimpleCategory Sub form to add and associate a new Category entity    ignore null N/A    related_products TypeaheadProductCollectionType List of related products   ProductPrice   This Form type is used for step2 or &amp;ldquo;Pricing&amp;rdquo; tab    price MoneyType Product price (tax excluded)    price_ttc MoneyType Product price (tax included)    ecotax MoneyType Product eco tax (tax included)    id_tax_rules_group ChoiceType One of the TaxRulesGroup entity    on_sale CheckboxType Boolean to indicate if Product is on sale    wholesale_price MoneyType Wholesale/cost Product price (tax excluded)    unit_price MoneyType Price per unit (tax included)    unity TextType Unity description (Per kilo, per litre, &amp;hellip;)    specific_price ProductSpecificPrice Sub form to add and associate a new SpecificPrice entity    *specificPricePriority_* ChoiceType List of criteria to define priorities to apply specific prices    specificPricePriorityToAll CheckboxType Boolean to indicate if the priorities criteria must be applied on ALL products   ProductQuantity   This Form type is used for step3 or &amp;ldquo;Quantities&amp;rdquo; tab    attributes TextType Text field used to select attributes for Combination entity generation    advanced_stock_management CheckboxType Boolean to indicate if Advanced stock management is enable for this Product (available only if PS_ADVANCED_STOCK_MANAGEMENT is enabled)    depends_on_stock ChoiceType Select stock policy when using advanced stock management (based on stock or manual)    pack_stock_type ChoiceType Pack stock management type (Decrement pack only, products only, both or default configuration PS_PACK_STOCK_TYPE)    qty_0 NumberType Define product stock quantity    out_of_stock ChoiceType Out of stock policy (Allow orders, Deny orders, or default configuration PS_ORDER_OUT_OF_STOCK)    minimal_quantity NumberType Minimum quantity for sale    location TextType Stock location    low_stock_threshold NumberType Quantity that defines low stock is reached    low_stock_alert CheckboxType Enable email alert when low stock is reached    available_now TranslateType Label when in stock (localized)    available_later TranslateType Label when out of stock (and back order allowed) (localized)    available_date DatePickerType Availability date    virtual_product ProductVirtual For virtual product: Specify if a file is associated, and download limitations (number of download, expiration, &amp;hellip;)   ProductShipping   This Form type is used for step4 or &amp;ldquo;Shipping&amp;rdquo; tab    width NumberType Product width    height NumberType Product height    depth NumberType Product depth    weight NumberType Product weight    additional_shipping_cost MoneyType Shipping fees    selectedCarriers ChoiceType Selection of available carriers    additional_delivery_times ChoiceType Specify delivery time (None, default, specific)    delivery_out_stock TranslateType Specific label for out of stock delivery time (localized)    delivery_in_stock TranslateType Specific label for in stock delivery time (localized)    *warehouse_combination_* CollectionType [ProductWarehouseCombination] List of sub forms for WarehouseProductLocation entity   ProductSeo   This Form type is used for step5 or &amp;ldquo;SEO&amp;rdquo; tab    meta_title TranslateType Meta title used for search engine (localized)    meta_description TranslateType Meta description used for search engine (localized)    link_rewrite TranslateType Link rewrite part used when generating Friendly urls (localized)    redirect_type ChoiceType Redirection HTTP code when product is inactive (Permanent/temporary redirection to category/product, or not found)    id_type_redirected TypeaheadProductCollectionType Product/Category ID to redirect to   ProductOptions   This Form type is used for step6 or &amp;ldquo;Options&amp;rdquo; tab    visibility ChoiceType Product visibility is lists (Everywhere, catalog only, search only, nowhere)    tags TranslateType List of tags (localized)    display_options FormType Various display options (available_for_order, show_price, online_only)    mpn TextType Manufacturer Part Number    upc TextType UPC barcode    ean13 TextType EAN-13 or JAN barcode    isbn TextType ISBN code    reference TextType Product reference    show_condition CheckboxType Display condition of product    condition ChoiceType Type of condition for product (New, used, refurbished)    suppliers ChoiceType List of Supplier for this product    default_supplier TextType One of the Supplier as default one    *supplier_combination_* CollectionType [ProductSupplierCombination] List of sub forms for ProductSupplier entity (details Price and reference for each supplier)    custom_fields CollectionType [ProductCustomField] List of sub forms for ProductCustom entity (define possible custom texts, images, &amp;hellip;)    attachment_product ProductAttachement Sub form to create and associate an Attachment entity (instructions, documentation, recipes, &amp;hellip;)    attachments ChoiceType List of Attachment for this product    Sub forms Here is a description of the sub forms used in the main one</description>
    </item>
    
    <item>
      <title>Why write documentation</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/documentation/why/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/documentation/why/</guid>
      <description>Why write technical documentation?  The best documentation is no documentation: code should be self-explanatory. All the lazy developers in history
 Writing documentation is hard.
We try to find excuses and rationalize and lie to ourselves so we can feel better about the fact that we should be doing it, but it&amp;rsquo;s &amp;ldquo;too much work&amp;rdquo;.
Here are two good reasons to try and convince you to start writing documentation, and help you while you help others, too:</description>
    </item>
    
    <item>
      <title>Advanced checks</title>
      <link>https://devdocs.prestashop.com/1.7/modules/testing/advanced-checks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/testing/advanced-checks/</guid>
      <description>Advanced checks Static Analysis In the previous chapter we dealt with the critical syntax error. Although we made sure it can be read by PHP, errors can exist in it and need to be caught before being sent to production. Static code analysers are able to detect some of these issues, such as:
 calling an undefined class or method from PHP or your project, trying to get the value of an unset variable, sending the wrong type of parameter to a method having a mismatch between your PHPdoc and your code &amp;hellip;  There are three major tools able to analyse your code: PHPStan, Psalm and Phan.</description>
    </item>
    
    <item>
      <title>Classic translation system</title>
      <link>https://devdocs.prestashop.com/1.7/modules/creation/module-translation/classic-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/creation/module-translation/classic-system/</guid>
      <description>Classic module translation system The classic translation system is a heritage from previous versions of PrestaShop and provides retrocompatibility with PrestaShop 1.6. If you plan on supporting only versions 1.7.6 and up, consider using the New translation system.
Native modules work differently
In PrestaShop 1.7, native modules (the ones bundled with PrestaShop) use a different system. Read more about it here: Native module translation.
 Modern (symfony-based) modules can only be translated using the New translation system.</description>
    </item>
    
    <item>
      <title>Contribute using localhost</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/contribute-pull-requests/contribute_using_localhost/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/contribute-pull-requests/contribute_using_localhost/</guid>
      <description>How to become a Core Contributor If you&amp;rsquo;re reading this, thank you! This means you&amp;rsquo;re interested in contributing to PrestaShop. You probably are a PrestaShop developer, and your use of the project is slightly different from ours. For instance, there are few differences between PrestaShop 1.7 (the release) and the branch 1.7 of PrestaShop in the GitHub repository. This is because we create a release usable by everyone from our sources.</description>
    </item>
    
    <item>
      <title>DBQuery class</title>
      <link>https://devdocs.prestashop.com/1.7/development/database/dbquery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/database/dbquery/</guid>
      <description>The DBQuery class The DBQuery class is a query builder which helps you create SQL queries. For instance:
&amp;lt;?php $sql = new DbQuery(); $sql-&amp;gt;select(&amp;#39;*&amp;#39;); $sql-&amp;gt;from(&amp;#39;cms&amp;#39;, &amp;#39;c&amp;#39;); $sql-&amp;gt;innerJoin(&amp;#39;cms_lang&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;c.id_cms = l.id_cms AND l.id_lang = &amp;#39;.(int)$id_lang); $sql-&amp;gt;where(&amp;#39;c.active = 1&amp;#39;); $sql-&amp;gt;orderBy(&amp;#39;position&amp;#39;); return Db::getInstance()-&amp;gt;executeS($sql); Main methods  __toString() Generate and get the query. build() Generate and get the query (return a string). from(string $table, mixed $alias = null) Set table for FROM clause. groupBy(string $fields) Add a GROUP BY restriction.</description>
    </item>
    
    <item>
      <title>Folder structure</title>
      <link>https://devdocs.prestashop.com/1.7/modules/creation/module-file-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/creation/module-file-structure/</guid>
      <description>Module file structure A module is made of a lot of files, all stored in a folder that bears the same name as the module, that folder being in turn stored in the /modules folder at the root of the main PrestaShop folder: /modules/&amp;lt;name_of_the_module&amp;gt;/. A module published in an archive file must be in a same subfolder.
Here are the possible files and folders for a PrestaShop 1.7 module:
➜ module tree -L 3 .</description>
    </item>
    
    <item>
      <title>Front controllers</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/controllers/front-controllers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/controllers/front-controllers/</guid>
      <description>Front controllers These class are accessible from the front-office and add features to the customers.
Creating a front controller In order to have a front controller read by PrestaShop, these 3 rules have to be followed:
 it is stored in the subfolder controllers/front/ of the module. in CamelCase, the class name follows this format: &amp;lt;ModuleClassName&amp;gt;&amp;lt;FileName&amp;gt;ModuleFrontController. it extends the class ModuleFrontController.  Minimum controller example Let&amp;rsquo;s say we want a controller responsible of payments validation in our module cheque.</description>
    </item>
    
    <item>
      <title>Front-Office Benchmark</title>
      <link>https://devdocs.prestashop.com/1.7/scale/benchmark/front-office/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/scale/benchmark/front-office/</guid>
      <description>How to benchmark your PrestaShop Shop (Front-office) Automatically benchmark with Gatling (recommended) Follow instruction on Back-Office benchmark page to get a pre-populated shop and to run Gatling scenarios on it.
Prestashop performance project on Github includes Front-Office scenarios you can edit to get your own scenarios running.
Benchmark with Siege tool Benchmark methodology In order to benchmark the performances of your shop, you will use the siege testing tool. Try to always use the latest available version HERE.</description>
    </item>
    
    <item>
      <title>How Pull Requests are processed</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/contribution-process/how-pull-requests-are-processed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/contribution-process/how-pull-requests-are-processed/</guid>
      <description>How Pull Requests are processed All submitted pull requests go through a thorough process which aims to provide a stable, consistent and reliable software that we all know under the name PrestaShop. Here is this process in details.
Automatic tasks when you open a Pull Request When you submit a new Pull Request to the project repository, some automatic checks are triggered.
Continuous Integration Four automatic code checker tools are active on the project.</description>
    </item>
    
    <item>
      <title>How to contribute and create UI tests</title>
      <link>https://devdocs.prestashop.com/1.7/testing/ui-tests/how-to-contribute-and-create-ui-tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/testing/ui-tests/how-to-contribute-and-create-ui-tests/</guid>
      <description>How to contribute and create UI tests Architecture Page Object Model (also called Page Object Pattern) is a way to organize your code in a test framework. It encourages you to separate your test logic from your page manipulation logic.
Our team uses POM as an architecture to organize the code: on one side we have our page logic, and on the other side we have our test logic.
The goal is to write your test code once, and only change the page logic when someone updates the application.</description>
    </item>
    
    <item>
      <title>How to use Grid Actions</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/work-with-grid-actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/work-with-grid-actions/</guid>
      <description>How to use Grid actions In addition to displaying data tables, Grid component also comes with a lot of additional features. One is the Grid actions.
What is a Grid action? A Grid action is an action (e.g. Import, Export &amp;amp; Show SQL query) that is applicable to the entire Grid.
How to add actions to Grid? Let&amp;rsquo;s take an example from Customers grid definition. It has 5 (grid) actions already:</description>
    </item>
    
    <item>
      <title>How to use Row Actions</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/work-with-row-actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/work-with-row-actions/</guid>
      <description>How to use Row actions In addition to displaying data tables, Grid component also comes with a lot of additional features. One is Row actions.
What is a Row action? A Row action is an action (e.g. Edit, View &amp;amp; Delete) that is applicable to a specific row in the Grid.
How to add row actions to Grid? Let&amp;rsquo;s take an example from Category grid definition. It has 3 (row) actions already:</description>
    </item>
    
    <item>
      <title>How to work with the Search Form in 1.7.5</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/work-with-search-form/in-1-7-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/work-with-search-form/in-1-7-5/</guid>
      <description>How to work with the Search Form The grid component allows to filter its content, to manage the filtering you will need to define the following elements:
 GridDefinition::getFilters Filters class Controllers:  Search action List action Reset filter action    Add Filters into GridDefinition &amp;lt;?php final class EmailLogsDefinitionFactory extends AbstractGridDefinitionFactory { /** * @param string $resetActionUrl * @param string $redirectionUrl */ public function __construct($resetActionUrl, $redirectionUrl) { $this-&amp;gt;resetActionUrl = $resetActionUrl; $this-&amp;gt;redirectionUrl = $redirectionUrl; } /** * {@inheritdoc} */ protected function getId() { return &amp;#39;email_logs&amp;#39;; } .</description>
    </item>
    
    <item>
      <title>Image management</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/advanced-use/image-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/advanced-use/image-management/</guid>
      <description>Image management PrestaShop manages images via the image resource, and several other resources use it as well to manage their own images. There are several types of images available, which can all be accessed via their respective API:
   Image type API url     General shop images /api/images/general   Product images /api/images/products   Category images /api/images/categories   Customization images /api/images/customizations   Manufacturer images /api/images/manufacturers   Supplier images /api/images/suppliers   Store images /api/images/stores    If you need to get a list of image types you can also use the /api/images API which lists all of them.</description>
    </item>
    
    <item>
      <title>List of hooks</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/hooks/list-of-hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/hooks/list-of-hooks/</guid>
      <description>List of hooks in PrestaShop 1.7 Update notes A couple of hooks were modified between 1.7.0.x and 1.7.1.x.
 actionDeleteProductInCartAfter has been divided into two hooks:  actionObjectProductInCartDeleteBefore. actionObjectProductInCartDeleteAfter.   displayProductButtons has been renamed into displayProductAdditionalInfo.
Don’t worry, we kept an alias :)  Full list Search hooks No hooks found
   action&amp;lt;AdminControllerClassName&amp;gt;&amp;lt;Action&amp;gt;After Called after performing &amp;lt;Action&amp;gt; in any &amp;lt;AdminController&amp;gt; Located in: /classes/controller/AdminController.php
Parameters:
&amp;lt;?php array( &amp;#39;controller&amp;#39; =&amp;gt; (AdminController), &amp;#39;return&amp;#39; =&amp;gt; (mixed) );  action&amp;lt;AdminControllerClassName&amp;gt;&amp;lt;Action&amp;gt;Before Called before performing &amp;lt;Action&amp;gt; in any &amp;lt;AdminController&amp;gt; Located in: /classes/controller/AdminController.</description>
    </item>
    
    <item>
      <title>Listing resources</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/prestashop-webservice-lib/listing-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/prestashop-webservice-lib/listing-resources/</guid>
      <description>Listing resources Let&amp;rsquo;s now see how to view a full list of customer IDs. We could display more information and customize it, but that&amp;rsquo;s for another part of this tutorial.
As we saw in the previous code sample, we need the get() method to retrieve an XML file containing all the customers. The parameter has to be a key-value array, where we define the resource we want:
   Key Value     resource customers    Using PrestaShopWebservice::get &amp;lt;?</description>
    </item>
    
    <item>
      <title>Patch release lifecycle</title>
      <link>https://devdocs.prestashop.com/1.7/project/release/minor-release-lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/release/minor-release-lifecycle/</guid>
      <description>Patch release lifecycle Patch releases are &amp;ldquo;maintainance&amp;rdquo; releases: they provide bug fixes and security patches, but do not provide enhancements or new features. They are part of a necessary maintenance process.
Scope of maintainance When a minor version is released, such as PrestaShop 1.7.7.0, the related branch becomes the latest and maintained branch. This means that, when PrestaShop 1.7.7.0 is out:
 There will be no more PrestaShop 1.7.6 patch releases, for either bug or security issues There might be, if necessary, patch releases for PrestaShop 1.</description>
    </item>
    
    <item>
      <title>Signature card</title>
      <link>https://devdocs.prestashop.com/1.7/modules/sample-modules/order-view-page-new-hooks/signature-widget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/sample-modules/order-view-page-new-hooks/signature-widget/</guid>
      <description>Signature card displayAdminOrderSide hook We use this hook to display scanned customer signature.
Lets create custom repository OrderSignatureRepository class inside demovieworderhooks/src/Repository folder. Symfony Repository classes (https://symfony.com/doc/3.3/doctrine/repository.html) help to interact with the database by providing frequently used functions like findOneBy to get the data (for example filtered data by a certain criteria - orderId field from OrderSignature entity).
&amp;lt;?php /** * Copyright since 2007 PrestaShop SA and Contributors * PrestaShop is an International Registered Trademark &amp;amp; Property of PrestaShop SA * * NOTICE OF LICENSE * * This source file is subject to the Academic Free License 3.</description>
    </item>
    
    <item>
      <title>Technical validation - Key steps</title>
      <link>https://devdocs.prestashop.com/1.7/modules/sell/techvalidation-keysteps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/sell/techvalidation-keysteps/</guid>
      <description>Technical Validation: key steps Have you ever wondered how the PrestaShop Addons Team proceeds with the validation ?
We are going to show you how to spare time so that you can pretty much &amp;ldquo;validate&amp;rdquo; your own module before submitting it to the Addons Marketplace. First you might want to read the Technical Tools and the Good Practices.
1. The Basics As you probably know, there are 3 types of submissions : New, Minor update, Major update.</description>
    </item>
    
    <item>
      <title>Testing access to the Webservice</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/testing-access/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/testing-access/</guid>
      <description>Testing access to the Webservice Now that your access key is generated you can test your store&amp;rsquo;s webservice, its endpoint is located in the /api/ uri at the root of your installation of Prestashop.
Accessing /api/ The quickest way to test your API is to use your browser:
 If PrestaShop is installed at the root of your server, you can access the API here: http://example.com/api/ If PrestaShop is installed in a subfolder of your server, you can access the API here: http://example.</description>
    </item>
    
    <item>
      <title>Additional action buttons</title>
      <link>https://devdocs.prestashop.com/1.7/modules/sample-modules/order-view-page-new-hooks/additional-action-buttons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/sample-modules/order-view-page-new-hooks/additional-action-buttons/</guid>
      <description>Additional buttons in the main buttons bar actionGetAdminOrderButtons hook demo We use this hook to display additional action buttons into the main buttons bar.
Let&amp;rsquo;s add hook related code to main module class demovieworderhooks:
&amp;lt;?php /** * Add buttons to main buttons bar */ public function hookActionGetAdminOrderButtons(array $params) { $order = new Order($params[&amp;#39;id_order&amp;#39;]); /** @var \Symfony\Bundle\FrameworkBundle\Routing\Router $router */ $router = $this-&amp;gt;get(&amp;#39;router&amp;#39;); /** @var \PrestaShopBundle\Controller\Admin\Sell\Order\ActionsBarButtonsCollection $bar */ $bar = $params[&amp;#39;actions_bar_buttons_collection&amp;#39;]; $viewCustomerUrl = $router-&amp;gt;generate(&amp;#39;admin_customers_view&amp;#39;, [&amp;#39;customerId&amp;#39;=&amp;gt; (int)$order-&amp;gt;id_customer]); $bar-&amp;gt;add( new \PrestaShopBundle\Controller\Admin\Sell\Order\ActionsBarButton( &amp;#39;btn-secondary&amp;#39;, [&amp;#39;href&amp;#39; =&amp;gt; $viewCustomerUrl], &amp;#39;View customer&amp;#39; ) ); $bar-&amp;gt;add( new \PrestaShopBundle\Controller\Admin\Sell\Order\ActionsBarButton( &amp;#39;btn-info&amp;#39;, [&amp;#39;href&amp;#39; =&amp;gt; &amp;#39;https://www.</description>
    </item>
    
    <item>
      <title>Back-Office Benchmark</title>
      <link>https://devdocs.prestashop.com/1.7/scale/benchmark/back-office/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/scale/benchmark/back-office/</guid>
      <description>How to benchmark your PrestaShop Shop (Back-office) Benchmark methodology In order to benchmark the performances of the backoffice of your shop, you will use the Gatling testing tool.
 Note: Backoffice benchmark is only possible starting with prestashop 1.7.4.0!
  If you want still want to run the test for version &amp;lt; 1.7.4.0, take a look at this PR: https://github.com/PrestaShop/PrestaShop/pull/8876
 What is Gatling? Gatling is a stress tool. Development is currently focusing on HTTP support.</description>
    </item>
    
    <item>
      <title>Continuous Integration / Continuous Deployment</title>
      <link>https://devdocs.prestashop.com/1.7/modules/testing/ci-cd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/testing/ci-cd/</guid>
      <description>Continuous Integration / Continuous Deployment In the previous page we detailed some testing tools and how to execute them. Thay may be run locally, in order to check the code is fine before pushing it to a remote git repository, but they can also be automatically run by a dedicated test environment after each push. This can be useful to prevent code being pushed to production if one of your tools reports an issue you missed.</description>
    </item>
    
    <item>
      <title>Contribute using Docker</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/contribute-pull-requests/contribute_using_docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/contribute-pull-requests/contribute_using_docker/</guid>
      <description>How to become a Core Contributor using Docker If you&amp;rsquo;re reading this, thank you! This means you&amp;rsquo;re interested in contributing to PrestaShop. You probably are a PrestaShop developer, and your use of the project is slightly different from ours. For instance, there are few differences between PrestaShop 1.7 (the release) and the branch 1.7 of PrestaShop in the GitHub repository. This is because we create a release usable by everyone from our sources.</description>
    </item>
    
    <item>
      <title>Extending Symfony form with upload image field</title>
      <link>https://devdocs.prestashop.com/1.7/modules/sample-modules/extending-sf-form-with-upload-image-field/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/sample-modules/extending-sf-form-with-upload-image-field/</guid>
      <description>Extending Symfony form with upload image field  Introduction In this tutorial we are going to build a module which extends Suppliers form (SELL -&amp;gt; Catalog -&amp;gt; Brands &amp;amp; Suppliers). This module will address the following need &amp;ldquo;I&amp;rsquo;d like to add an &amp;lsquo;upload image&amp;rsquo; field to the Supplier Add/Edit form because I want to display a new logo for each supplier on my shop. So this new field must allow me to add, edit and delete image files linked to a supplier.</description>
    </item>
    
    <item>
      <title>ObjectModel class</title>
      <link>https://devdocs.prestashop.com/1.7/development/database/objectmodel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/database/objectmodel/</guid>
      <description>The ObjectModel class When needing to dive deep, you have to use the ObjectModel class. This is the main object of PrestaShop’s object model. It can be overridden… with precaution.
It is an Active Record kind of class (see: Active record pattern). The table attributes or view attributes of PrestaShop’s database are encapsulated in this class. Therefore, the class is tied to a database record. After the object has been instantiated, a new record is added to the database.</description>
    </item>
    
    <item>
      <title>Release a native PrestaShop module</title>
      <link>https://devdocs.prestashop.com/1.7/project/release/release-a-native-ps-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/release/release-a-native-ps-module/</guid>
      <description>Release a new version of a native PrestaShop module Some modules are embedded within PrestaShop ZIP archives and loaded through Composer package manager. They consequently are listed in the composer.json of the Core project.
This is what we call &amp;ldquo;native PrestaShop modules&amp;rdquo;. The source code of these modules is hosted on GitHub.
This page explains what is needed to release these modules.
Requirements Mandatory requirements The module should be valid which means:</description>
    </item>
    
    <item>
      <title>Retrieve a resource</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/prestashop-webservice-lib/retrieve-resource/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/prestashop-webservice-lib/retrieve-resource/</guid>
      <description>Retrieve a resource Now that we have retrieved a list of resources let&amp;rsquo;s see how to access the details of one resource in particular. In the XML list you can see that each individual resource as a unique ID that you can use to get its details:
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;customers&amp;gt; &amp;lt;customer id=&amp;#34;1&amp;#34; xlink:href=&amp;#34;http://example.com/api/customers/1&amp;#34;/&amp;gt; &amp;lt;customer id=&amp;#34;2&amp;#34; xlink:href=&amp;#34;http://example.com/api/customers/2&amp;#34;/&amp;gt; &amp;lt;/customers&amp;gt; &amp;lt;/prestashop&amp;gt; We are going to use the same get() method but provide an additional id parameter</description>
    </item>
    
    <item>
      <title>Specific prices</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/advanced-use/specific-price/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/advanced-use/specific-price/</guid>
      <description>Specific prices PrestaShop offers a feature that allows to set specific prices depending on various parameters (country, currency, customer group, &amp;hellip;). The regular API only return the generic prices so if you need some specific prices you can use the price parameter. It is available on:
 products combinations  Custom prices will be added in an alias field that you need to indicate in your parameters.
Example Let&amp;rsquo;s say you want to retrieve the price for combination 25 of the product 2, with tax, in a webservice field name my_price, then you&amp;rsquo;ll need to query:</description>
    </item>
    
    <item>
      <title>Use hooks on modern pages</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/hooks/use-hooks-on-modern-pages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/hooks/use-hooks-on-modern-pages/</guid>
      <description>Use hooks on modern pages You know you can already customize your PrestaShop store thanks to many hooks: the good news is that you can still use hooks like you did in the earlier versions of PrestaShop in modern pages.
Starting from PrestaShop 1.7.3, you can access the modern Services Container into your modules and so on access powerful and customizable features available in Symfony:
 Twig, the most popular templating engine; Swiftmailer, a feature-rich mailer; Doctrine ORM and Doctrine DBAL to manage your database; Filesystem and Finder libraries to manage all filesystem operations; Monolog for every logging operations; Serializer library for whom who need to manipulate Json and Xml formats&amp;hellip;  Of course, you also have access to every service used by the Core of PrestaShop.</description>
    </item>
    
    <item>
      <title>Validation checklist</title>
      <link>https://devdocs.prestashop.com/1.7/modules/sell/techvalidation-checklist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/sell/techvalidation-checklist/</guid>
      <description>Module validation checklist First of all, the submitted addon must pass the validator. Some reports will lead to an automatic decline if found. The following rules are manually checked by the modules team.
Common rules Code review Module structure is followed The module respected the expected structure.
License is compatible A module and its dependencies must be compatible with the OSL (core) and AFL (modules and themes) licenses used to manage and distribute the PrestaShop open source project.</description>
    </item>
    
    <item>
      <title>Widgets</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/widgets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/widgets/</guid>
      <description>Widgets Widget is an advanced concept introduced on PrestaShop 1.7, extending hooks feature.
Limitation of hooks In their basic use, a display hook will be shown at a specific place in the template. If a module wants to display the same additional content on several places, whatever the merchant chose, it still has to register and implement all the possible hooks.
With widgets, module developers can display content everywhere the module is asked to do so.</description>
    </item>
    
    <item>
      <title>Adding a configuration page</title>
      <link>https://devdocs.prestashop.com/1.7/modules/creation/adding-configuration-page/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/creation/adding-configuration-page/</guid>
      <description>Adding a configuration page Your module can get a &amp;ldquo;Configure&amp;rdquo; link in the back office module list, and therefore let the user change some settings. This &amp;ldquo;Configure&amp;rdquo; link appears with addition of the getContent() method to your main class. This is a standard PrestaShop method: its sole existence sends a message to the back office, saying &amp;ldquo;there&amp;rsquo;s a configuration page in this module, display the configuration link&amp;rdquo;.
But having a getContent() public method in the MyModule object only makes the &amp;ldquo;Configure&amp;rdquo; link appear; it does not create the configuration page out of nowhere.</description>
    </item>
    
    <item>
      <title>Alter Configuration Back Office forms</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/forms/admin-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/forms/admin-forms/</guid>
      <description>Alter configuration forms on modern pages  One of the most common tasks for the PrestaShop developers is to alter the data and make it manageable for customers. In PrestaShop 1.6, a specific Form framework was created to help developers. In PrestaShop 1.7, the system has changed as we now rely on the Symfony Form component.
This system only works with pages from the &amp;ldquo;Configure&amp;rdquo; section of your back office.</description>
    </item>
    
    <item>
      <title>Create a resource</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/prestashop-webservice-lib/create-resource/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/prestashop-webservice-lib/create-resource/</guid>
      <description>Create a resource Creation workflow The creation workflow is a bit more complex than reading some data from the API, mainly because we rarely manage data via XML format. In most use cases the user is presented with a human understandable component, like a form, and the data entered is then processed. Besides we need to make sure that the XML sent to the webservice is understandable and complete.
As we explained in a previous tutorial the webservice provides two resource schemas.</description>
    </item>
    
    <item>
      <title>Database structure</title>
      <link>https://devdocs.prestashop.com/1.7/development/database/structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/database/structure/</guid>
      <description>Maintaining the database Database structure definition Global definition The database structure of PrestaShop can be found in install/data/db_structure.sql (1.7.3.x releases example).
It is used one time, during the installation of PrestaShop. It contains the structure of almost all tables. If a table needs to be added or modified, this the file you should open.
Table in DB but not in db_structure.sql With PrestaShop 1.7, some tables have been migrated to doctrine entities (i.</description>
    </item>
    
    <item>
      <title>How to extend a Grid with Javascript extensions</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/extend-grid-with-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/extend-grid-with-javascript/</guid>
      <description>How to extend a grid with Javascript extensions Introduction Javascript grid extensions supplement grid behavior and enhance user experience. For example, most grids contains SortingExtension which provides sorting by columns functionality, BulkActionCheckboxExtension which enables interactive selection of bulk actions and so on. But the fact is that most of grids will not necessarily need all features, so by using extensions we encourage to easily add or remove grid feature while loading only necessary javascript code.</description>
    </item>
    
    <item>
      <title>How to override Back Office views</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/templating/admin-views/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/templating/admin-views/</guid>
      <description>How to override Back Office views  Since PrestaShop 1.7, the back office is being progressively migrated to the Symfony framework. Even though modules are no longer allowed to override a complete controller like before (it was highly discouraged anyway), we have introduced new powerful and more efficient ways to customize the Back Office.
As part of this migration, PrestaShop is switching its templating engine from Smarty to Twig. Twig is very popular in the PHP/Symfony world, it&amp;rsquo;s well-documented and it&amp;rsquo;s also one of the most efficient engines out there.</description>
    </item>
    
    <item>
      <title>How to push your changes to GitHub</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/contribute-pull-requests/create-pull-request/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/contribute-pull-requests/create-pull-request/</guid>
      <description>Hot to publish your contribution to GitHub Once your changes sound good and tests pass on your local computer, you can contribute to the open source project by submitting these changes as a Pull Request on GitHub.
First you need to push your branch on GitHub:
git push origin add-emoticons-support  You will need to use your GitHub credentials. Now you can create your Pull Request on GitHub. If you don&amp;rsquo;t know how to do it, you can read GitHub documentation.</description>
    </item>
    
    <item>
      <title>KPI block in Admin pages</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/controllers/kpi-blocks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/controllers/kpi-blocks/</guid>
      <description>How to add a KPI block in admin pages  A KPI block (also called KPI row) is shown here:
  KPI Block   You can follow these steps to easily add a KPI row to a modern page:
  Define your KPI classes:
 You can use one of existing KPI classes, from PrestaShop\PrestaShop\Adapter\Kpi namespace, You can create new classes - they must implement the PrestaShop\PrestaShop\Core\Kpi\KpiInterface    Define a KPI row factory service in src/PrestaShopBundle/Resources/config/services/core/kpi.</description>
    </item>
    
    <item>
      <title>Manage Configuration</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/advanced-use/manage-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/advanced-use/manage-configuration/</guid>
      <description>Manage Configuration You can manage your shop configuration thanks to the API, in this example we will set the PS_MULTISHOP_FEATURE_ACTIVE to true (which enables multishop mode).
API call First check if the configuration already exists by using filters and display parameters /api/configurations/?display=[id,name,value]&amp;amp;filter[name]=[PS_MULTISHOP_FEATURE_ACTIVE]
Create configuration If the configuration doesn&amp;rsquo;t exist yet, you will receive an empty list:
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;configurations&amp;gt; &amp;lt;/configurations&amp;gt; &amp;lt;/prestashop&amp;gt; So you need to POST on the configuration API /api/configurations/ to create this new value</description>
    </item>
    
    <item>
      <title>Displaying content on the front office</title>
      <link>https://devdocs.prestashop.com/1.7/modules/creation/displaying-content-in-front-office/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/creation/displaying-content-in-front-office/</guid>
      <description>Displaying content on the front office As it is, the module does not do much. In order to display something on the front office, we have to add support for a few hooks. This is done by implementing the hooks&#39; methods, and that was actually done in the install() method we wrote earlier, using the registerHook() method:
&amp;lt;?php public function install() { if (Shop::isFeatureActive()) { Shop::setContext(Shop::CONTEXT_ALL); } return parent::install() &amp;amp;&amp;amp; $this-&amp;gt;registerHook(&amp;#39;leftColumn&amp;#39;) &amp;amp;&amp;amp; $this-&amp;gt;registerHook(&amp;#39;actionFrontControllerSetMedia&amp;#39;) &amp;amp;&amp;amp; Configuration::updateValue(&amp;#39;MYMODULE_NAME&amp;#39;, &amp;#39;my friend&amp;#39;); } As you can see, we make it so that the module is hooked to the &amp;ldquo;leftColumn&amp;rdquo; and &amp;ldquo;actionFrontControllerSetMedia&amp;rdquo; hooks.</description>
    </item>
    
    <item>
      <title>Doctrine</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/doctrine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/doctrine/</guid>
      <description>Doctrine  From the 1.7.6 version of PrestaShop we integrate support of Doctrine services and entities for modules. Doctrine is a powerful ORM allowing you to manage your database data via objects. It offers an abstract layer allowing you to perform insert/update actions via a simple $entity-&amp;gt;setData(&#39;update&#39;) call. But you can also create your own repositories to fetch specific data via left join, add conditions and so on&amp;hellip;
Doctrine is the default ORM integrated with Symfony which is why we added it for modules in legacy context.</description>
    </item>
    
    <item>
      <title>How to modify an existing Grid in a module</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/modify-grid-in-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/modify-grid-in-module/</guid>
      <description>How to modify an existing Grid in a module If you need to modify an existing Grid, like inverting two columns for instance, this is really easy to do it in a module thanks to the available hooks.
Business use case In this tutorial, we will try to improve the user experience of the Customers listing Grid (this page will be available in 1.7.6).
Thinking about it, we could improve the current grid to highlight business-driven information:</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://devdocs.prestashop.com/1.7/basics/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/basics/introduction/</guid>
      <description>Fundamentals of PrestaShop Development PrestaShop was conceived so that third-party modules could easily build upon its foundations, making it an extremely customizable e-commerce software.
PrestaShop’s customization is based on three possibilities:
 Themes, Modules, Overriding.  Themes are explored in full in the Designer Guide.
Modules and the override system are explored in this Developer Guide, starting with the “Concepts” section below. You can learn more about each in the following chapters:</description>
    </item>
    
    <item>
      <title>Manage Multishop</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/advanced-use/manage-multishop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/advanced-use/manage-multishop/</guid>
      <description>Manage Multishop In order to use web services when the multishop feature is enabled, you can use the regular API requests and add the id_shop parameter (or the id_group_shop parameter for overriding by group).
Enable Multishop The Multishop can be enabled via the PS_MULTISHOP_FEATURE_ACTIVE configuration value, here is a tutorial to manage configuration via API.
List shops Once you have several instances you can access to the shop list and their IDs.</description>
    </item>
    
    <item>
      <title>Update a resource</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/prestashop-webservice-lib/update-resource/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/prestashop-webservice-lib/update-resource/</guid>
      <description>Update a resource Update workflow The update workflow is quite similar to the creation workflow, the main difference is that the initial input is not a blank XML but an existing one, so we use the get() method to get a prefilled XML, and then we can update its fields.
  Update Resource via Webservice   You can update this schema using the source XML file importable in services like draw.</description>
    </item>
    
    <item>
      <title>Delete a resource</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/prestashop-webservice-lib/delete-resource/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/prestashop-webservice-lib/delete-resource/</guid>
      <description>Delete a resource To delete a resource you only need its ID, then you can use the delete() method.
   Key Value     resource customers   id resource_id (int)    Using PrestaShopWebservice::delete &amp;lt;?php try { $webService = new PrestaShopWebservice(&amp;#39;http://example.com/&amp;#39;, &amp;#39;ZR92FNY5UFRERNI3O9Z5QDHWKTP3YIIT&amp;#39;, false); $id = 2; $webService-&amp;gt;delete([ &amp;#39;resource&amp;#39; =&amp;gt; &amp;#39;customers&amp;#39;, &amp;#39;id&amp;#39; =&amp;gt; $id, // Here we use hard coded value but of course you could get this ID from a request parameter or anywhere else  ]); echo &amp;#39;Customer with ID &amp;#39; .</description>
    </item>
    
    <item>
      <title>Enabling the Auto-Update</title>
      <link>https://devdocs.prestashop.com/1.7/modules/creation/enabling-auto-update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/creation/enabling-auto-update/</guid>
      <description>Enabling the Auto-Update Since PrestaShop 1.5, it is possible to have your module auto-update: once a new version is available, PrestaShop suggests an &amp;ldquo;Update&amp;rdquo; button to the user. Clicking this button will trigger a series of methods, each leading closer to the latest version of your module.
In order to bring auto-update support to your module, you need three main things:
 Clearly indicate the module&amp;rsquo;s version number in its constructor method: $this-&amp;gt;version = &#39;1.</description>
    </item>
    
    <item>
      <title>How to customize the Grid templates</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/customize-templates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/customize-templates/</guid>
      <description>How to customize the Grid templates The Grid component is highly extensible from a structural and data point of view, but sometimes you need to customize how a grid, a row or a specific column is rendered.
For instance, let&amp;rsquo;s take a look at the Logs page of the PrestaShop Back Office. You can see that the &amp;ldquo;Employee&amp;rdquo; column have a specific rendering:
  Logs grid of PrestaShop with specific employee Column   In this tutorial, we will learn how to customize the rendering of every part of a Grid:</description>
    </item>
    
    <item>
      <title>Multilingual Fields</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/tutorials/advanced-use/multilang-fields/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/tutorials/advanced-use/multilang-fields/</guid>
      <description>Multilingual / localized Fields Some entities have multilingual / localized fields, by default the API calls return the value for all languages installed in the Shop, but you might want to fine tune the expected result using the language parameter.
Language parameter You can specify which fields you want for each resource using the display parameter.
   Key Value Result     language 3 Single value    [3|5|.</description>
    </item>
    
    <item>
      <title>Overrides</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/overrides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/overrides/</guid>
      <description>Overrides Overriding is a way to &amp;ldquo;override&amp;rdquo; class files and controller files. PrestaShop&amp;rsquo;s ingenious class auto-loading function makes the &amp;ldquo;switch&amp;rdquo; to other files fairly simple. Thanks to PrestaShop&amp;rsquo;s fully object-oriented code, you can rely on object inheritance to modify and add new behaviors, using the properties and methods of the various existing classes.
Important note There are limitations and risks of using overrides. Keep them for your own shop. Overrides in PrestaShop are exclusive.</description>
    </item>
    
    <item>
      <title>External dependencies &amp; autoload with Composer</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/composer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/composer/</guid>
      <description>Composer Composer is a tool known in the PHP ecosystem to manage the dependencies of a project. It has been originally added in PrestaShop 1.7 to handle the inclusion of the Symfony framework and the native modules. As composer is compatible with PHP 5.3, it can be used in a module even compatible with previous major versions of PrestaShop.
From a single configuration file, a module will benefit of these features:</description>
    </item>
    
    <item>
      <title>How to create a custom Grid Action</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/create-custom-grid-action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/create-custom-grid-action/</guid>
      <description>How to create a custom Grid Action Do you know how to do it? Please feel free to contribute to the docs! </description>
    </item>
    
    <item>
      <title>Symfony extension concepts</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/symfony/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/symfony/</guid>
      <description>Symfony extension concepts PrestaShop modules acts as Symfony bundles, extension points are added continuously in each minor version:
   Version Symfony features     1.7.3 Twig templates and Services   1.7.4 Configuration Forms and Console commands   1.7.5 Modern controllers and Security   1.7.6 Doctrine ORM and Entity forms   1.7.7 Controllers as services    </description>
    </item>
    
    <item>
      <title>How to create a custom Column Type</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/create-custom-column-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/create-custom-column-type/</guid>
      <description>How to create a custom Column Type Do you know how to do it? Please feel free to contribute to the docs! </description>
    </item>
    
    <item>
      <title>BadgeColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/badge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/badge/</guid>
      <description>BadgeColumn Type  This basic BadgeColumn displays a raw field data in Grid, associated with a badge.
Available options    Properties Type Expected value     field string required Record field name which column displays.   badge_type string default: success Indicates which field of the row contains the image source. (Allowed values: success, info, danger, warning)    Example usage &amp;lt;?php use PrestaShop\PrestaShop\Core\Grid\Column\Type\Common\BadgeColumn; use PrestaShop\PrestaShop\Core\Grid\Column\ColumnCollection; $badgeColumn = new BadgeColumn(&amp;#39;total_spent&amp;#39;); $badgeColumn-&amp;gt;setName(&amp;#39;Sales&amp;#39;); $badgeColumn-&amp;gt;setOptions([ &amp;#39;field&amp;#39; =&amp;gt; &amp;#39;total_spent&amp;#39;, &amp;#39;badge_type&amp;#39; =&amp;gt; &amp;#39;success&amp;#39;, &amp;#39;empty_value&amp;#39; =&amp;gt; &amp;#39;--&amp;#39;, ]); $columns = new ColumnCollection(); $columns-&amp;gt;add($badgeColumn); </description>
    </item>
    
    <item>
      <title>Commands</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/commands/</guid>
      <description>Commands  Since version 1.7 of PrestaShop, everyone have access to the PrestaShop console using the following instruction in a terminal:
./bin/console
Since v1.7.5, you can add and provide your own commands into the PrestaShop console using modules.
If you load and use PrestaShop Core legacy classes such as an ObjectModel within a Command context, you might run into issues. This is a known limitation of the Commands. Removing this limitation is being explored for future PS versions.</description>
    </item>
    
    <item>
      <title>CQRS - Commands and Queries</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/domain/cqrs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/domain/cqrs/</guid>
      <description>CQRS - Commands and Queries What is CQRS? CQRS stands for Command Query Responsibility Segregation. In brief, the CQRS pattern suggests to separate &amp;ldquo;write&amp;rdquo; and &amp;ldquo;read&amp;rdquo; models, which it refers to as Commands and Queries. In a web application like a CMS, we perform either &amp;ldquo;read&amp;rdquo; operations which return information to the user or &amp;ldquo;write&amp;rdquo; operations which modify the data managed by the application.
Why using CQRS in PrestaShop? During Back Office migration to Symfony, PrestaShop needs a way to access and alter data on the new Symfony pages without multiplying the sources of truth, and without accessing ObjectModel (e.</description>
    </item>
    
    <item>
      <title>DataColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/data/</guid>
      <description>DataColumn Type  The most basic column is DataColumn. It is used to display raw field data in Grid.
Available options    Properties Type Expected value     field string required The record field name that the column displays.    Example usage &amp;lt;?php use PrestaShop\PrestaShop\Core\Grid\Column\Type\DataColumn; use PrestaShop\PrestaShop\Core\Grid\Column\ColumnCollection; $dataColumn = new DataColumn(&amp;#39;id_product&amp;#39;); $dataColumn-&amp;gt;setName(&amp;#39;ID&amp;#39;); $dataColumn-&amp;gt;setOptions([ &amp;#39;field&amp;#39; =&amp;gt; &amp;#39;id_product&amp;#39;, ]); $columns = new ColumnCollection(); $columns-&amp;gt;add($dataColumn); </description>
    </item>
    
    <item>
      <title>DateTimeColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/datetime/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/datetime/</guid>
      <description>DateTimeColumn Type  You can use this column type in your Grid to format datetime values. It is common to get datetime values (e.g. Created at, Updated at &amp;amp; etc.) from the database and format them before displaying.
Available options    Properties Type Expected value     field string required The record field name that the column displays.   format string default: Y-m-d H:i:s The format to use when formatting datetime values.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/getting-started/</guid>
      <description>Getting Started About CRUD &amp;amp; REST The PrestaShop web service uses the REST architecture in order to be available on as many platforms as possible, since the HTTP protocol and XML files are understood by most platforms, if not all.
CRUD is an acronym that stands for &amp;ldquo;Create, Read, Update, and Delete&amp;rdquo;. These are the four basic operations for managing data in an application.
REST defines roughly a style of software architecture, which promotes the use of HTTP methods when building web application, instead of custom methods or protocols such as SOAP or WSDL.</description>
    </item>
    
    <item>
      <title>How to backup PrestaShop</title>
      <link>https://devdocs.prestashop.com/1.7/basics/keeping-up-to-date/backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/basics/keeping-up-to-date/backup/</guid>
      <description>How to backup PrestaShop Before starting anything, you must think first about safety. Any modification made on a shop could break it, so you must make sure all your data has been backed up before going further. This basically implies saving two things: your files and your database.
We will give you all the details you may need to run an upgrade, but we can’t be held responsible for any damage caused to your shop during the process.</description>
    </item>
    
    <item>
      <title>How to create an Empty state</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/create-empty-state/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/tutorials/create-empty-state/</guid>
      <description>How to create an Empty state  Grid component allows developer to configure Empty state to make empty grid look more appealing for user.
Creating an Empty state By default, when Grid is empty user sees it as:
  Empty Suppliers grid   Unfortunately, it&amp;rsquo;s not very engaging, so let&amp;rsquo;s create Empty state for it! There are a few steps you have to follow:
 You have to create a template for it and put it in src/PrestaShopBundle/Resources/views/Admin/Common/Grid/Blocks/EmptyState directory, so Grid component can locate it.</description>
    </item>
    
    <item>
      <title>How to create your own unit tests</title>
      <link>https://devdocs.prestashop.com/1.7/testing/how-to-create-your-own-unit-tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/testing/how-to-create-your-own-unit-tests/</guid>
      <description>How to create your own unit tests or add tests to PrestaShop Unit tests are great if you want to validate the behavior of a single unit of code. By &amp;ldquo;unit of code&amp;rdquo; we usually mean a class although it could also be a script.
Creating a Unit test Everything is explained in the PHPUnit 5.7 documentation.
For unit tests, we strongly encourage you to base your test on the PHPUnit&amp;rsquo;s TestCase class only.</description>
    </item>
    
    <item>
      <title>How to edit a page on GitHub</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/documentation/how/edit-on-github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/documentation/how/edit-on-github/</guid>
      <description>How to edit a page on GitHub Editing a page on GitHub is the most straight-forward way of contributing content to PrestaShop DevDocs.
 The good: you don&amp;rsquo;t need to have anything installed. The bad: even if GitHub provides a preview of your markdown code, you won&amp;rsquo;t be able to see exactly how it will look like on the site (for instance, shortcodes aren&amp;rsquo;t interpreted by the GitHub preview).  For this tutorial, you will need a GitHub account (free).</description>
    </item>
    
    <item>
      <title>How to execute tests</title>
      <link>https://devdocs.prestashop.com/1.7/testing/how-to-launch-tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/testing/how-to-launch-tests/</guid>
      <description>How to execute the PrestaShop automatic test suite Executing Unit/integration test suites At least four test suites are available, testing different parts of PrestaShop:
 Legacy tests: heritage from PrestaShop 1.6: mix of unit, integration and functional tests; Legacy controllers: added to help with the Symfony migration, ensures that old Back Office controllers are still runnable; Admin tests: specific to PrestaShop 1.7, tests src/Core and src/Adapter classes; Symfony specific tests: specific to PrestaShop 1.</description>
    </item>
    
    <item>
      <title>How to extend a layout in a theme from a module</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/mail-templates/extend-a-layout-from-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/mail-templates/extend-a-layout-from-module/</guid>
      <description>How to extend a layout in a theme from a module Sometimes you may want to use the provided email theme but you would like to add some information or change the header/footer. One of the advantages of new theme layouts is that they use Twig so you can take advantage of its extension and blocks features.
Layout {% extends &amp;#39;@MailThemes/modern/core/order_conf.html.twig&amp;#39; %}{% block content %}{{ parent() }}&amp;lt;table width=&amp;#34;100%&amp;#34;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td align=&amp;#34;center&amp;#34; class=&amp;#34;titleblock&amp;#34; style=&amp;#34;border-collapse: collapse; mso-table-lspace: 0pt; mso-table-rspace: 0pt; direction: ltr; font-size: 0px; padding: 0 50px; text-align: center; vertical-align: top;&amp;#34;&amp;gt; &amp;lt;div style=&amp;#34;font-family:Open sans, arial, sans-serif;font-size:14px;line-height:25px;text-align:left;color:#555454;&amp;#34;&amp;gt; {{ &amp;#39;Thank you for purchasing this product on our store.</description>
    </item>
    
    <item>
      <title>How to use GitHub to report an issue</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/contribute-reporting-issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/contribute-reporting-issues/</guid>
      <description>How to use GitHub to report an issue PrestaShop is using GitHub to track bugs and issues. This is the best place to describe bugs you are witnessing on your PrestaShop installation, and have the developers try to fix it.
Creating your account To participate, you need to create an account to use the bug tracker.
Create your account here.
Fill all fields and validate your account request, then follow the different steps.</description>
    </item>
    
    <item>
      <title>ImageColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/image/</guid>
      <description>ImageColumn Type  This column is used to display an image from a row. You need to specify which field of the row contains the image source.
Available options    Properties Type Expected value     src_field string required Indicates which field of the row contains the image source    Example usage &amp;lt;?php use PrestaShop\PrestaShop\Core\Grid\Column\Type\Common\ImageColumn; use PrestaShop\PrestaShop\Core\Grid\Column\ColumnCollection; $imageColumn = new ImageColumn(&amp;#39;flag&amp;#39;); $imageColumn-&amp;gt;setName(&amp;#39;Flag&amp;#39;); $imageColumn-&amp;gt;setOptions([ &amp;#39;src_field&amp;#39; =&amp;gt; &amp;#39;flag&amp;#39;, ]); $columns = new ColumnCollection(); $columns-&amp;gt;add($imageColumn); </description>
    </item>
    
    <item>
      <title>Introduction to PrestaShop&#39;s Architecture</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/introduction/</guid>
      <description>Learn how PrestaShop is structured: back-end, front-end, business stack, themes and modules</description>
    </item>
    
    <item>
      <title>LinkColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/link/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/link/</guid>
      <description>LinkColumn Type  This LinkColumn displays a raw field data encapsulated in a link (very useful for adding an edition link on a name, for example).
Available options    Properties Type Expected value     field string required The record field name that the column displays.   route string required The route used to generate the link url.   route_param_name string required The parameter name used by the route to generate the url.</description>
    </item>
    
    <item>
      <title>Migration project and strategy</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/strategy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/strategy/</guid>
      <description>This is a summary of the current Migration Strategy. It provides an overview of our current vision, in the end of this year 2020, of the Symfony Migration project.
Different kind of pages Back-Office pages can be classified in four categories:
 Configuration / Settings Form pages  These pages allow the user to modify configuration settings in PrestaShop.
Listing pages  These pages allow the user to browse PrestaShop content using listings.</description>
    </item>
    
    <item>
      <title>Register a new hook</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/hook/register-new-hook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/hook/register-new-hook/</guid>
      <description>How to register a new Hook in PrestaShop This is basically three steps:
 dispatch the hook in the code (in templates or PHP classes/files); update the hooks xml definition of Installer; update the hooks table for &amp;ldquo;Auto Upgrade&amp;rdquo; system;  Dispatching hooks Most of the time, you will dispatch the hook using an instance of HookDispatcher. It can be retrieved from the service container and/or injected, as it&amp;rsquo;s done for example in Form Handlers:</description>
    </item>
    
    <item>
      <title>Setting up your local environment</title>
      <link>https://devdocs.prestashop.com/1.7/themes/getting-started/setting-up-your-local-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/getting-started/setting-up-your-local-environment/</guid>
      <description>Setting up your local environment Now that you intend to building a theme for PrestaShop, you are better off keeping all your development work on your machine. The main advantage is that it makes it possible for you to entirely bypass the process of uploading your files on your online server in order to test your changes. Another advantage is that a local test environment enables you to test code without the risk of breaking your production store.</description>
    </item>
    
    <item>
      <title>System requirements for PrestaShop 1.7</title>
      <link>https://devdocs.prestashop.com/1.7/basics/installation/system-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/basics/installation/system-requirements/</guid>
      <description>.h-version-titles th:not(:first-child) { text-align: center; } .support-yes, .example-yes { background-color: #8ce48c; text-align: center; } .support-no, .example-no { background-color: #e89b9b; } .example-yes, .example-no { display: inline-block; width: 1.1rem; height: 1.1rem; margin-bottom: -2px; }  System requirements for PrestaShop 1.7 PrestaShop needs the following server configuration in order to run:
 System: Unix, Linux or Windows. Web server: Apache Web Server 2.2 or any later version. PHP: We recommend PHP 7.1 or later.</description>
    </item>
    
    <item>
      <title>Templates &amp; layouts</title>
      <link>https://devdocs.prestashop.com/1.7/themes/reference/templates/templates-layouts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/reference/templates/templates-layouts/</guid>
      <description>Templates &amp;amp; layouts PrestaShop template file are based on the Smarty 3 template engine.
All template files must be stored in the theme&amp;rsquo;s templates/ subfolder. For instance, the default theme has its template files in the following folder: /themes/classic/templates.
Directory structure Templates are then split between various subfolders.
 /_partials/ Code shared accross the whole site like header, footer or notifications. /catalog/ Product page, product/brand/supplier listing, search result and such. /checkout/ Cart, delivery options, payement options, order confirmations and such.</description>
    </item>
    
    <item>
      <title>Templating with Twig</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/templating-with-twig/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/templating-with-twig/</guid>
      <description>Templating with Twig This is mostly the easy part. Legacy pages use Smarty while modern pages use Twig. These templating engines are actually similar in many ways.
For instance, this is a legacy template:
&amp;lt;span class=&amp;#34;employee_avatar_small&amp;#34;&amp;gt; &amp;lt;img class=&amp;#34;img&amp;#34; alt=&amp;#34;&amp;#34; src=&amp;#34;{$employee_image}&amp;#34; /&amp;gt; &amp;lt;/span&amp;gt; {$employee_name}  All of the legacy templates are located in the admin-dev/themes/default/template/controller folder &amp;hellip; and here is a possible migration of it to Twig:
&amp;lt;span class=&amp;#34;employee_avatar_small&amp;#34;&amp;gt; &amp;lt;img class=&amp;#34;img&amp;#34; alt=&amp;#34;{{ employee.</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://devdocs.prestashop.com/1.7/themes/distribution/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/distribution/testing/</guid>
      <description>Testing What makes a theme valid When you&amp;rsquo;re trying to select a theme in the backoffice, PrestaShop will test if your theme is valid. It won&amp;rsquo;t install if the theme isn&amp;rsquo;t valid.
A theme is valid if it contains some files and some configuration keys.
Required files Here is the complete list of required files:
 preview.png config/theme.yml assets/js/theme.js assets/css/theme.css templates/_partials/form-field.tpl templates/catalog/product.tpl templates/catalog/listing/product-list.tpl templates/checkout/cart.tpl templates/checkout/checkout.tpl templates/cms/category.tpl templates/cms/page.tpl templates/customer/address.tpl templates/customer/addresses.tpl templates/customer/guest-tracking.tpl templates/customer/guest-login.</description>
    </item>
    
    <item>
      <title>Testing Resources</title>
      <link>https://devdocs.prestashop.com/1.7/modules/testing/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/testing/resources/</guid>
      <description>Testing Resources Docker images Docker isolate your application in containers, making their isolation and deployment easier. If you&amp;rsquo;re confident with using it, we created several images for easier deployment of PrestaShop:
 https://hub.docker.com/r/prestashop/prestashop/, in which all PrestaShop releases between 1.4 and 1.7 can be found. Covers most needs and is perfect for a quick start. https://hub.docker.com/r/prestashop/prestashop-git/, containing the git repository content with different PHP version. For advanced users. https://hub.docker.com/r/prestashop/base/, containing the required stack to run PrestaShop, without the core files.</description>
    </item>
    
    <item>
      <title>ToggleColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/toggle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/toggle/</guid>
      <description>ToggleColumn Type  This ToggleColumn is used to display booleans, it will display an icon instead of the value. If the user clicks on it, this triggers a toggle of the boolean value.
Available options    Properties Type Expected value     field string required The record field name that the column displays.   primary_field string required The record field name that the column displays.   route string required The route used to generated link url.</description>
    </item>
    
    <item>
      <title>Translation Domains</title>
      <link>https://devdocs.prestashop.com/1.7/development/internationalization/translation/translation-domains/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/internationalization/translation/translation-domains/</guid>
      <description>Translation Domains Sometimes wordings may seem vague when seen out of context. For example, &amp;ldquo;Delete&amp;rdquo;. Just like that, we can imagine what is it used for, but we don&amp;rsquo;t really have much information about it. What are we deleting? From a translator standpoint, this is very hard, because not only do we not know where it&amp;rsquo;s supposed to be used, but it could be used in several places, with different meanings.</description>
    </item>
    
    <item>
      <title>Writing a good commit message</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/contribution-guidelines/writing-a-good-commit-message/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/contribution-guidelines/writing-a-good-commit-message/</guid>
      <description>Writing a good commit message Commit names should give an idea of the nature and context of the change that has been done. The more details, the better! The commit name should be as unique and recognizable as your commit itself. There are multitude of articles on the web regarding commit messages, here are two that you can find useful: How to Write a Git Commit Message and What makes a good commit message?</description>
    </item>
    
    <item>
      <title>Pdf Files</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/pdf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/pdf/</guid>
      <description>Pdf Files One of the interaction with the Customers involve sending mails, including pdf files.
For example, for every order you do on a Shop as a Customer we expect to receive an Invoice.
Working on what make a shop an unique experience, as a Developer you will be asked to customize every PDF files that PrestaShop can produce.
You can alter the rendering using the provided data or push the PDF Rendering to its best, introducing your very own information that will made your PDF files amazing.</description>
    </item>
    
    <item>
      <title>Installating a local environment</title>
      <link>https://devdocs.prestashop.com/1.7/basics/installation/localhost/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/basics/installation/localhost/</guid>
      <description>Installing PrestaShop for development Now that you intend to develop for PrestaShop, you are better off keeping all your development work on your machine. The main advantage is that it makes it possible for you to entirely bypass the process of uploading your file on your online server in order to test it. Another advantage is that a local test environment enables you to test code without the risk of breaking your production store.</description>
    </item>
    
    <item>
      <title>ActionColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/action/</guid>
      <description>ActionColumn Type  This column type allows adding actions to your Grid rows. The action targets the corresponding row. For more info about possible actions see Actions reference.
Available options    Properties Type Expected value     actions array default: null List of actions assigned to each row.    Example usage &amp;lt;?php use PrestaShop\PrestaShop\Core\Grid\Column\Type\Common\ActionColumn; use PrestaShop\PrestaShop\Core\Grid\Column\ColumnCollection; $actionColumn = new ActionColumn(&amp;#39;actions&amp;#39;); $actionColumn-&amp;gt;setName(&amp;#39;Actions&amp;#39;); $actionColumn-&amp;gt;setOptions([ &amp;#39;actions&amp;#39; =&amp;gt; [ -&amp;gt;add((new LinkRowAction(&amp;#39;delete&amp;#39;)) -&amp;gt;setIcon(&amp;#39;delete&amp;#39;) -&amp;gt;setOptions([ &amp;#39;route&amp;#39; =&amp;gt; &amp;#39;admin_custom_route&amp;#39;, &amp;#39;route_param_name&amp;#39; =&amp;gt; &amp;#39;mailId&amp;#39;, &amp;#39;route_param_field&amp;#39; =&amp;gt; &amp;#39;id_mail&amp;#39;, &amp;#39;confirm_message&amp;#39; =&amp;gt; &amp;#39;Delete selected item?</description>
    </item>
    
    <item>
      <title>BulkActionColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/bulk-action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/bulk-action/</guid>
      <description>BulkActionColumn Type  This column type allows adding bulk action checkboxes to your Grid. This only adds the checkbox in the grid, you can then manage bulk actions via javascript.
Available options    Properties Type Expected value     bulk_field string required: The record field name that will be used as the bulk action checkbox value.    Example usage &amp;lt;?php use PrestaShop\PrestaShop\Core\Grid\Column\Type\Common\BulkActionColumn; use PrestaShop\PrestaShop\Core\Grid\Column\ColumnCollection; $bulkActionColumn = new BulkActionColumn(&amp;#39;bulk_action&amp;#39;); $bulkActionColumn-&amp;gt;setName(&amp;#39;&amp;#39;); // it is common to set an empty name for bulk action columns $bulkActionColumn-&amp;gt;setOptions([ &amp;#39;bulk_field&amp;#39; =&amp;gt; &amp;#39;id_product&amp;#39;, ]); $columns = new ColumnCollection(); $columns-&amp;gt;add($bulkActionColumn); </description>
    </item>
    
    <item>
      <title>Configure Apache Http</title>
      <link>https://devdocs.prestashop.com/1.7/basics/installation/httpd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/basics/installation/httpd/</guid>
      <description>Configure Apache Httpd The following file is provided as an example configuration for your Apache server. It may be incomplete, and remember you must adapt it for your own server&amp;rsquo;s needs!
 In Apache 2.4, Order Allow,Deny has been replaced by Require all granted. We assume you are using Apache Http 2.4 or higher.
 With mod_php/PHP-CGI &amp;lt;VirtualHost *:80&amp;gt; # or 443 for SSL support ServerName example.com DocumentRoot /path/to/prestashop # SSLEngine on # SSLCertificateFile /etc/apache2/ssl/example.</description>
    </item>
    
    <item>
      <title>CRUD Forms</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/forms/crud-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/forms/crud-forms/</guid>
      <description>CRUD Forms Introduction In computer programming, CRUD is an acronym for the four basic functions of persistent storage: create, read, update, and delete.
PrestaShop handles several logic objects, like Cart, Product, Order, Customer&amp;hellip; among many others. When such objects are stored using a unique identifier, we refer to them as identifiable objects.
In the Back Office, most identifiable objects are managed using forms and page listings that follow the CRUD pattern.</description>
    </item>
    
    <item>
      <title>Data Transfer Objects</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/domain/data-transfer-objects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/domain/data-transfer-objects/</guid>
      <description>Data Transfer Objects PrestaShop is using Data Transfer Objects (or DTOs) in its codebase, in this section you learn how you can benefit from using DTOs as well.
What is Data Transfer Object? Data Transfer Object is object (e.g. UserData) that contains data in a structured format. This means that DTO usually comes with getter methods or public properties for accessing it&amp;rsquo;s data. The main benefit of using DTOs is that you know what data it has.</description>
    </item>
    
    <item>
      <title>Describing Pull Requests</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/contribution-guidelines/pull-requests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/contribution-guidelines/pull-requests/</guid>
      <description>The Pull Request form When you create a new Pull Request, you will be presented with a form that looks like this:
The first step is to write a summary of your pull request&amp;rsquo;s purpose in its GitHub title.
Writing a good title A Pull Request title should be short, but precise enough to describe the changes it introduces and how they impact the software.
Please respect the following rules:</description>
    </item>
    
    <item>
      <title>Head</title>
      <link>https://devdocs.prestashop.com/1.7/themes/reference/templates/head/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/reference/templates/head/</guid>
      <description>Head The head part is very important in term of SEO and performances.
Have look at Classic&amp;rsquo;s head part to see real life examples.
Assets PrestaShop 1.7 changed the way asset works and it means the way to it&amp;rsquo;s added inside the &amp;lt;head&amp;gt; tag of your page changed a bit too.
There are 2 importants files to use:
 _partials/stylesheets.tpl _partials/javascript.tpl  These 2 files are used to take full advantage of the new features of 1.</description>
    </item>
    
    <item>
      <title>How to add a layout in a theme from a module</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/mail-templates/add-a-layout-from-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/mail-templates/add-a-layout-from-module/</guid>
      <description>How to add a layout in a theme from a module You can add your own mail layouts from your module, they will then be included during email generation. Each time you install a language or if you generate them via the back office your layout will be rendered, translated and exported in the appropriate folders.
Let&amp;rsquo;s assume for this example you want to add your layout for both themes classic and modern.</description>
    </item>
    
    <item>
      <title>How to create your own symfony controller tests</title>
      <link>https://devdocs.prestashop.com/1.7/testing/how-to-create-your-own-symfony-controller-tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/testing/how-to-create-your-own-symfony-controller-tests/</guid>
      <description>How to create your own symfony controller tests or add tests to PrestaShop If you create your own Modern (symfony) controllers or if you plan on migrating a legacy controller, you can create tests to cover parts of HTTP layer aka symfony functional tests.
Creating a functional test To create a functional test, we encourage you to base your test class on our own implementation of WebTestCase.
For instance:
&amp;lt;?php namespace Tests\Functional\Foo; use Tests\Integration\PrestaShopBundle\Test\WebTestCase; class BarTest extends WebTestCase { public function testSomeAction() { $url = this-&amp;gt;router-&amp;gt;generate(&amp;#39;route_name&amp;#39;); $this-&amp;gt;client-&amp;gt;request(&amp;#39;GET&amp;#39;, $url); $response = $this-&amp;gt;client-&amp;gt;getResponse(); self::assertTrue($response-&amp;gt;isSuccessful()); } } Find out more in Symfony&amp;rsquo;s documentation on functional testing.</description>
    </item>
    
    <item>
      <title>How to edit a page on your computer</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/documentation/how/edit-on-your-computer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/documentation/how/edit-on-your-computer/</guid>
      <description>How to edit a page on your computer using Git Running a local copy of DevDocs on your computer is the best way to work on this project. Even though it requires a little extra work to set up, you will gain the ability to preview your changes almost instantly, as well as being able to introduce more than one change at a time.
Prerequisites To run a local DevDocs install on your system, you will need:</description>
    </item>
    
    <item>
      <title>How to migrate to PrestaShop 1.7</title>
      <link>https://devdocs.prestashop.com/1.7/basics/keeping-up-to-date/migration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/basics/keeping-up-to-date/migration/</guid>
      <description>How to migrate to PrestaShop 1.7 Manual migration - Process details We will use the ETL (Extract - Transform - Load) process to complete a migration, a concept usually applied to data warehouses.
The database structure may change with each new release of PrestaShop, but major versions may also imply features being replaced, preventing a shop to be smoothly upgraded in some cases. For these shops, a migration is a solution to be able to keep up with new releases.</description>
    </item>
    
    <item>
      <title>PositionColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/position/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/position/</guid>
      <description>PositionColumn Type  This column type allows you to define rows position using a drag and drop feature. Besides this column definition you need to use our javascript PositionExtension and prepare a route to manage the positions update. To help you create this controller you can use our PositionUpdater component.
Available options    Properties Type Expected value     id_field string required The record field containing its id.</description>
    </item>
    
    <item>
      <title>Settings Forms</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/forms/settings-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/forms/settings-forms/</guid>
      <description>Settings Forms Introduction In PrestaShop, there are a lots of settings forms that require a unified way to handle of them. To move the settings creation and update out of controllers the following components are being used:
 Form Data Provider - responsible for options data retrieval and saving the data. Form Handler - responsible for building the form.  Form Data Providers In order to load existing data into the form (when editing, for instance) and save the form data (when the form is submitted), you need to create and register a Form Data Provider.</description>
    </item>
    
    <item>
      <title>Symfony bridge for hooks</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/hook/symfony-bridge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/hook/symfony-bridge/</guid>
      <description>Symfony bridge for hooks In Back-Office, migrated pages are powered by Symfony. The powerful Symfony Event Dispatcher has been chosen to replace, in the long term, hooks. However, in order to preserve backward compatibility, both systems coexist in 1.7.
It is important that modules which subscribe to a hook are correctly notified no matter where the hook is dispatched from, be it in legacy code or modern code.
In legacy code, hooks are dispatched using Hook::exec().</description>
    </item>
    
    <item>
      <title>Tooling prerequisites for theme designers</title>
      <link>https://devdocs.prestashop.com/1.7/themes/getting-started/tools-for-theme-designers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/getting-started/tools-for-theme-designers/</guid>
      <description>Tooling prerequisites for theme designers The way 1.7 themes are created is significantly different from the way they were with PrestaShop 1.6. By taking the freedom to rewrite the way themes work according to the latest best-practices, we chose to also work with modern tools. These tools are widely accepted as best-of-breed in the current web development; hence, learning to use them will not only make you more productive in PrestaShop development, but more importantly in web development in general.</description>
    </item>
    
    <item>
      <title>Value Objects</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/domain/value_objects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/domain/value_objects/</guid>
      <description>Value Objects PrestaShop is using Value Objects in its codebase. To help you understand better what they are, this article aims to explain what Value object is and how to use it.
What is Value Object? Value Objects (VO for short) are small, simple, immutable objects, like Money or a date range, whose equality is not based on their identity. This means that any two given instances of a same VO are considered equal when they contain the same values.</description>
    </item>
    
    <item>
      <title>Configure Nginx</title>
      <link>https://devdocs.prestashop.com/1.7/basics/installation/nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/basics/installation/nginx/</guid>
      <description>Configure Nginx The following file is provided as an example configuration for your Nginx server. It may be incomplete, and remember you must adapt it for your own server&amp;rsquo;s needs!
server { # Ipv4  listen 80; # IPv6  # listen [::]:80;  # SSL Ipv4 &amp;amp; v6  # listen 443 ssl http2;  # listen [::]:443 ssl;  # Your SSL Certificates, don&amp;#39;t forget to take a look at Certbot (https://certbot.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://devdocs.prestashop.com/1.7/basics/installation/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/basics/installation/configuration/</guid>
      <description>Configuring PrestaShop By default, PrestaShop is configured to provide a secure and stable environment to both the shop administrator and the customers.
As a developer, there are several changes that you could and should bring to the default installation in order to help you code better, spot bugs faster, and generally make a great PrestaShop product.
Disabling the cache and forcing Smarty compilation When your development has an impact on the front office, whether you are building a theme or simply a module which displays information to the customer, you should force the template file compilation and disable the cache, so as to always see the result of your changes directly.</description>
    </item>
    
    <item>
      <title>CQRS usage in forms</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/forms/cqrs-usage-in-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/forms/cqrs-usage-in-forms/</guid>
      <description>CQRS usage in forms This article assumes that you are already familiar with CQRS and CRUD forms, as this topic only demonstrates the usage of the CQRS approach. The basics To use CQRS you need to:
 Inject a CommandBus or QueryBus instance using your class constructor. Create an instance of the desired Command or Query. Call your command using the CommandBus or QueryBus.  Usage examples Using Commands In this example, we will be working with edition in a Contact CRUD Form.</description>
    </item>
    
    <item>
      <title>Domain exceptions</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/domain/domain-exceptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/domain/domain-exceptions/</guid>
      <description>Domain exceptions With introduction of domain driven design in PrestaShop, a new way of error handling in the code is seeing the daylight. The code in PrestaShop\PrestaShop\Core\Domain namespace started to utilize domain exceptions.
What is a domain exception A domain exception is an exception, that is thrown in application&amp;rsquo;s domain level, which is specific to that particular domain. Let&amp;rsquo;s see how domain exceptions look like in the code. For this example, let&amp;rsquo;s look at Category domain:</description>
    </item>
    
    <item>
      <title>How to add an email theme from a module</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/mail-templates/add-a-theme-from-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/mail-templates/add-a-theme-from-module/</guid>
      <description>How to add an email theme from a module Now, what if you want to add a whole new email theme? Of course one possibility is to add a new theme folder in mails/themes/ but it&amp;rsquo;s not the most convenient if you want to install/uninstall it easily and quickly, so let&amp;rsquo;s integrate the theme in a module.
Just like we did to add a layout from a module we are going to use the actionListMailThemes hook, except this time we are going to add a whole email theme.</description>
    </item>
    
    <item>
      <title>How to create your own Behat tests</title>
      <link>https://devdocs.prestashop.com/1.7/testing/how-to-create-your-own-behat-tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/testing/how-to-create-your-own-behat-tests/</guid>
      <description>How to create your own Behat tests or add tests to PrestaShop  Behat tests are great if you want to validate the behavior of a component of the code and/or follow a user-oriented scenario.
By &amp;ldquo;component&amp;rdquo; we usually mean a group of classes being called together, sometimes using an external dependency (a web API or a database system like MySQL).
By &amp;ldquo;user-oriented scenario&amp;rdquo; we mean a scenario that is a series of steps, each step is an action, and at the end of the series there is an expected result</description>
    </item>
    
    <item>
      <title>How to upgrade PrestaShop</title>
      <link>https://devdocs.prestashop.com/1.7/basics/keeping-up-to-date/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/basics/keeping-up-to-date/upgrade/</guid>
      <description>How to upgrade PrestaShop Important
Do not go further if you haven’t made a backup of your shop.
Rollback will be the only way to go back if something does not go well, and this requires a backup.
Learn how to backup your shop
 This chapter describes several ways to complete an upgrade of PrestaShop.
Manual upgrade – Process details This guide gives you the full control on the process.</description>
    </item>
    
    <item>
      <title>Notifications</title>
      <link>https://devdocs.prestashop.com/1.7/themes/reference/templates/notifications/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/reference/templates/notifications/</guid>
      <description>Notifications Throughout the whole front office, the customer can receive notification messages from PrestaShop, to inform about successes or errors for instance. Your theme can also send notifications when certain events occur.
The notification messages are not hard-coded in the template files, but are sent from the controller, so that you have consistency in case you update/change your theme. Thus, this way there is a better chance that all notification messages are already translated into your language!</description>
    </item>
    
    <item>
      <title>Reference</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/reference/</guid>
      <description>Web service reference All webservice APIs are accessible through the /api/ gateway. For instance, http://example.com/api/carriers
Available HTTP methods Most resources can be accessed in a REST manner, with the 5 main HTTP request methods: GET, POST, PUT, DELETE, HEAD. The only exceptions are:
   Key GET POST PUT DELETE HEAD     search X    X   stock_availables X X   X   stock_movements X    X   stocks X    X   supply_order_details X    X   supply_order_histories X    X   supply_order_receipt_histories X    X   supply_order_states X    X   supply_orders X    X   warehouse_product_locations X    X   warehouses X X X  X    All resources have two schemas that are accessible via a parameter:</description>
    </item>
    
    <item>
      <title>Supported branches</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/contribution-guidelines/supported-branches/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/contribution-guidelines/supported-branches/</guid>
      <description>Supported branches Maintainers should only accept contributions for branches which are subject to new releases.
Once a minor &amp;ldquo;dot-zero&amp;rdquo; version has been released, no new patch releases will be made for previous versions. This means that only the latest minor version patch branch is supported – with the exception of rare cases, like a security bug being found just before or after a minor release is published.
For example, the 1.</description>
    </item>
    
    <item>
      <title>Understanding the &#34;src&#34; folder</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/file-structure/understanding-src-folder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/file-structure/understanding-src-folder/</guid>
      <description>Understanding the &amp;ldquo;src&amp;rdquo; folder The main idea when doing the 1.7 release was to use Symfony as a replacement for our own PrestaShop framework.
In the /src folder you&amp;rsquo;ll find 3 main folders with different purposes:
 Core: contains business logic classes Adapter: business logic classes that still depend on legacy framework (for instance: Context, Dispatcher or constants); PrestaShopBundle: classes that acts as a glue between PrestaShop classes and Symfony  Core Core classes belong to the PrestaShop\PrestaShop\Core namespace.</description>
    </item>
    
    <item>
      <title>Writing Markdown</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/documentation/how/writing-markdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/documentation/how/writing-markdown/</guid>
      <description>Writing Markdown This site was created using the wonderful Hugo static site generator, but the content itself is written using Markdown.
Don&amp;rsquo;t worry, you don&amp;rsquo;t need to know anything about Hugo or the Go language to write documentation. The Markdown syntax is basically plain text with some simple added syntax for styling.
If you don&amp;rsquo;t know Markdown yet, have a look at this quick Markdown guide from GitHub.
Extended features: Shortcodes Hugo uses special short codes for many things.</description>
    </item>
    
    <item>
      <title>Cheat sheet</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/cheat-sheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/cheat-sheet/</guid>
      <description>Cheat sheet for Webservice All these options can be added to your queries as query parameters (either GET or POST depending on the method used in your request).
Generic Options    Key Value Description     output_format XML, JSON Change the output format   ps_method GET, POST, PUT, DELETE Override the HTTP method used for the request    Resource options    Key Value Result     language 3 Only display localized fields in one language    [3|5|.</description>
    </item>
    
    <item>
      <title>Contribution guidelines for modules</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/contribution-guidelines/project-modules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/contribution-guidelines/project-modules/</guid>
      <description>Contribution guidelines for modules This document describes general guidelines for contributing to PrestaShop modules hosted on GitHub.
How to contribute Contributors wishing to edit a module&amp;rsquo;s files should follow the following process:
  Create your GitHub account, if you do not have one already.
  Fork the project to your GitHub account.
  Clone your fork to your local machine in the /modules directory of your PrestaShop installation.</description>
    </item>
    
    <item>
      <title>Controller and Routing</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/controller-routing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/controller-routing/</guid>
      <description>Controller and Routing Modern/Symfony Controllers Read the Symfony documentation on Controllers and Routing. Every migrated page needs one or more Controllers: if you consider that a legacy Controller needs to be split into multiple controllers (for example: different URLs), it&amp;rsquo;s the right time to do it.
New controllers should be placed in the src/PrestaShopBundle/Controller/Admin folder. Starting on 1.7.3, controllers are being progressively organized in sub-folders following the Back Office menu. For instance, if you are migrating a page located into &amp;ldquo;Advanced Parameters&amp;rdquo; section, put it into src/PrestaShop/Controller/Admin/Configure/AdvancedParameters.</description>
    </item>
    
    <item>
      <title>Hooks</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/hooks/</guid>
      <description>How to migrate hooks Hooks are the most important feature for the PrestaShop developers because they allow them to improve PrestaShop by adding code or content in multiple points of the application. For Symfony developers, you can see that as Events on steroids. To keep some degree of compatibility with 1.6 or 1.7 (pre-Symfony migration) modules, we need to ensure that hooks are still available, invoked and/or rendered at the right place.</description>
    </item>
    
    <item>
      <title>How to add layout variables from a module</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/mail-templates/add-layout-variables-from-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/mail-templates/add-layout-variables-from-module/</guid>
      <description>How to add layout variables from a module You can add your own layout variables which may be used in you custom template. To demonstrate this feature we assume you already have added you custom layout to a theme (see How to add a layout in a theme from a module). Here is an example of a layout using a customMessage variable.
Layout {# modules/my_email_theme_module/mails/layout/customizable_modern_layout.html.twig #}{% extends &amp;#39;@MailThemes/modern/components/layout.html.twig&amp;#39; %}{% block content %}&amp;lt;table width=&amp;#34;100%&amp;#34;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td align=&amp;#34;center&amp;#34; class=&amp;#34;titleblock&amp;#34;&amp;gt; &amp;lt;font size=&amp;#34;2&amp;#34; face=&amp;#34;{{ languageDefaultFont }}Open-sans, sans-serif&amp;#34; color=&amp;#34;#555454&amp;#34;&amp;gt; &amp;lt;span class=&amp;#34;title&amp;#34;&amp;gt;{{ &amp;#39;This is an example mail template from my module for modern theme&amp;#39;|trans({}, &amp;#39;EmailsBody&amp;#39;, locale)|raw }}&amp;lt;/span&amp;gt; &amp;lt;/font&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td align=&amp;#34;center&amp;#34; class=&amp;#34;titleblock&amp;#34;&amp;gt; &amp;lt;font size=&amp;#34;2&amp;#34; face=&amp;#34;{{ languageDefaultFont }}Open-sans, sans-serif&amp;#34; color=&amp;#34;#555454&amp;#34;&amp;gt; &amp;lt;span class=&amp;#34;subtitle&amp;#34;&amp;gt;{{ customMessage }}&amp;lt;/span&amp;gt; &amp;lt;/font&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td class=&amp;#34;space_footer&amp;#34;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; {% endblock %}Using the hook Now you need to add your variables for this specific layout, in order to do so you will use the actionBuildMailLayoutVariables hook.</description>
    </item>
    
    <item>
      <title>Listing pages</title>
      <link>https://devdocs.prestashop.com/1.7/themes/reference/templates/listing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/reference/templates/listing/</guid>
      <description>Listing pages Your catalog is mostly 2 things: a list of products and a detailed product page.
This section covers the listing pages, which includes: category, search result, products per brand, best seller list, new product list and so on.
In order to reduce code duplication, the only necessary template is the file catalog/listing/product-list.tpl.
Extending product-list template We already covered how PrestaShop chooses the right template to use so we know that the category template extends the product-list template.</description>
    </item>
    
    <item>
      <title>Theme organization</title>
      <link>https://devdocs.prestashop.com/1.7/themes/getting-started/theme-organization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/getting-started/theme-organization/</guid>
      <description>Theme organization Directory structure A PrestaShop theme is a set of files which you can edit in order to change the look of your online shop.
Here are a few important tidbits:
 All themes have their files located in the /themes folder, at the root of PrestaShop&amp;rsquo;s folder. Each theme has its own sub-folder, in the main themes folder. Each theme is made of template files (.tpl), image files (.</description>
    </item>
    
    <item>
      <title>Compatible licenses</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/contribution-guidelines/compatible-licenses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/contribution-guidelines/compatible-licenses/</guid>
      <description>Compatible licenses The PrestaShop open source project is distributed under the OSL 3.0 license. All dependencies included and distributed with PrestaShop must be compatible with this license.
Software dependencies Below is a list of the known compatible licenses that can accepted for software dependencies:
 AFL Apache BSD CC-O EPL EUPL ISC MIT Unlicense  Artwork Artwork (including but not limited to: icons, pictures and fonts) is usually distributed with specific licenses.</description>
    </item>
    
    <item>
      <title>Grid / CRUD</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/grid-crud-page/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/grid-crud-page/</guid>
      <description>How to migrate a Grid/CRUD page In PrestaShop&amp;rsquo;s Back Office, most of the pages are organized the same way.
We can already see 2 categories of pages that represent almost 90% of back office:
 Configuration pages: forms that alter the configuration; CRUD pages: pages with a filterable/searchable table of data and some options to access a form of creation/edition;  CRUD pages provide a lot of features.
Access to a lot of data, ordered by column: this data can be simple (text) or more complex (display a thumbnail).</description>
    </item>
    
    <item>
      <title>How to apply a transformation from a module</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/mail-templates/apply-transformation-from-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/mail-templates/apply-transformation-from-module/</guid>
      <description>How to apply a transformation from a module The TransformationInterface is a powerful and handy way to modify your template&amp;rsquo;s design easily. Here are the interface details:
&amp;lt;?php namespace PrestaShop\PrestaShop\Core\MailTemplate\Transformation; interface TransformationInterface { /** * @param string $templateContent * @param array $templateVariables * * @return string */ public function apply($templateContent, array $templateVariables); /** * Returns the type of templates this transformation is associated with, * either html or txt, so that the renderer knows if it has to be applied * or not * * @return string */ public function getType(); /** * @param LanguageInterface $language * * @return $this */ public function setLanguage(LanguageInterface $language); } The apply method is the most important, it receives the rendered layout as a string, you can then perform replacement or even DOM manipulation as long as your return the whole template as a string (if you don&amp;rsquo;t want modify it simply return the string unchanged).</description>
    </item>
    
    <item>
      <title>How to test Pull Requests and branches</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/contribute-by-testing-pull-requests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/contribute-by-testing-pull-requests/</guid>
      <description>How to test Pull Requests Tests determine the quality of a software. This process involves evaluating information that is related to a shop.
To make testing easier, we provide a Vagrant configuration designed for testing branches and pull requests.
What is installed  Debian 10 Buster Git Apache 2.4 Multiple PHP versions (7.1, 7.2, 7.3, 7.4) MariaDB 10 NodeJS  Requires First of all you need two tools to run this project:</description>
    </item>
    
    <item>
      <title>Theme.yml</title>
      <link>https://devdocs.prestashop.com/1.7/themes/getting-started/theme-yml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/getting-started/theme-yml/</guid>
      <description>Theme.yml The theme&amp;rsquo;s theme.yml file defines all of the theme&amp;rsquo;s configuration and meta information, such as its version number, layouts, compatibility range, hook configuration, etc.
Theme description The theme&amp;rsquo;s name MUST match its directory name. For instance, if the theme is named &amp;ldquo;My Awesome Theme&amp;rdquo; and its &amp;lsquo;name&amp;rsquo; value is set to &amp;ldquo;my-awesome-theme&amp;rdquo;, then the folder MUST be /my-awesome-theme .
Users will be able to choose the layout for each page from the theme&amp;rsquo;s settings page.</description>
    </item>
    
    <item>
      <title>Cleaning up</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/clean-up/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/clean-up/</guid>
      <description>Cleaning up Once everything is migrated, refactored, extracted to specific classes and working like a charm, it&amp;rsquo;s time to remove the old, migrated parts:
 Delete the old controller. Delete the old templates (delete the admin-dev/themes/default/template/controller/{name} folder. Delete the related &amp;ldquo;legacy tests&amp;rdquo;.  </description>
    </item>
    
    <item>
      <title>EmployeeNameWithAvatarColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/employee-name-with-avatar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/employee-name-with-avatar/</guid>
      <description>EmployeeNameWithAvatarColumn Type  This is a special type that allows you to add a column with the employee name and its avatar to your Grid. You can see how it looks by default:
  Employee name with avatar column   Available options    Properties Type Expected value     field string required Employee&amp;rsquo;s name field.    field type: string required
The employee&amp;rsquo;s name field.</description>
    </item>
    
    <item>
      <title>Global JavaScript components</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/global-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/global-components/</guid>
      <description>Global JavaScript components? It&amp;rsquo;s a new system available since the 1.7.8 version mainly created for module developers, which allow you to use components we already use in the core without importing it. Here is the ADR where we decided what we should do to avoid this problem.
You are now able to use components we expose to the window.prestashop.component object without importing anything.
This object contains two attributes:
 component which contain some components you can instantiate; instance which contains every instances of initiated components.</description>
    </item>
    
    <item>
      <title>How to compile assets</title>
      <link>https://devdocs.prestashop.com/1.7/development/compile-assets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/compile-assets/</guid>
      <description>How to compile assets Some components in PrestaShop, like Javascript or SCSS files, need to be compiled to be usable.
Requirements We use Webpack to compile assets. You only need NodeJS from 8.x to 12.x (get it here), NPM will take care of it all.
Assets that need to be compiled  Back Office  Default theme  SASS files
Located in admin-dev/themes/default/sass   New theme  SCSS files</description>
    </item>
    
    <item>
      <title>How to send e-mails</title>
      <link>https://devdocs.prestashop.com/1.7/development/mail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/mail/</guid>
      <description>How to send e-mails Using the Mail::send() method The Mail core class extends ObjectModel This example is assuming you are using in a controller named mycontroller of a module named mymodule &amp;lt;?php class mymodulemycontrollerModuleFrontController extends ModuleFrontController { public function initContent() { parent::initContent(); Mail::Send( (int)(Configuration::get(&amp;#39;PS_LANG_DEFAULT&amp;#39;)), // defaut language id  &amp;#39;contact&amp;#39;, // email template file to be use  &amp;#39; Module Installation&amp;#39;, // email subject  array( &amp;#39;{email}&amp;#39; =&amp;gt; Configuration::get(&amp;#39;PS_SHOP_EMAIL&amp;#39;), // sender email address  &amp;#39;{message}&amp;#39; =&amp;gt; &amp;#39;Hello world&amp;#39; // email content  ), Configuration::get(&amp;#39;PS_SHOP_EMAIL&amp;#39;), // receiver email address  NULL, //receiver name  NULL, //from email address  NULL //from name  ); } }  Prestashop will use the Shop Configuration to decide if use smtp connection or php mail function so check it out on backoffice or in app/config/parameter.</description>
    </item>
    
    <item>
      <title>SeverityLevelColumn reference</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/severity-level/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/grid/columns-reference/severity-level/</guid>
      <description>SeverityLevelColumn Type  Use this column to display severity level in your Grid.
Available options    Properties Type Expected value     field string required Record field name which is used as severity level.   with_message bool default: false Whether to show severity level message in addition with numeric severity level value.    Example usage &amp;lt;?php use PrestaShop\PrestaShop\Core\Grid\Column\Type\Status\SeverityLevelColumn; use PrestaShop\PrestaShop\Core\Grid\Column\ColumnCollection; $severityColumn = new SeverityLevelColumn(&amp;#39;severity&amp;#39;); $severityColumn-&amp;gt;setName(&amp;#39;Severity (1-4)&amp;#39;); $severityColumn-&amp;gt;setOptions([ &amp;#39;field&amp;#39; =&amp;gt; &amp;#39;severity&amp;#39;, &amp;#39;with_message&amp;#39; =&amp;gt; true, // enable severity messages ]); $columns = new ColumnCollection(); $columns-&amp;gt;add($severityColumn); </description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/migration-guide/testing/</guid>
      <description>Testing You are encouraged to add both unit and functional tests for every new class you have created.
You must add a smoke test (also called &amp;ldquo;survival&amp;rdquo;) for every new page you migrate.
Smoke testing A smoke test is a really simple and basic test that ensure the page will load with the right HTTP code. This won&amp;rsquo;t ensure the page will works as expected but if the test fails, this ensure the page is not functional.</description>
    </item>
    
    <item>
      <title>The UIKit</title>
      <link>https://devdocs.prestashop.com/1.7/development/uikit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/uikit/</guid>
      <description>What&amp;rsquo;s the PrestaShop UIKit? The UIKit is a project extending Bootstrap 4 in order to provide some components with PrestaShop&amp;rsquo;s colors. You can see every components on this page.
How do we use the UIKit? We use it by adding it into our npm dependency, and then you&amp;rsquo;ve multiple possibilities to use it.
 You can import dist files, it means that you won&amp;rsquo;t be able to use our variables outside of the UIKit.</description>
    </item>
    
    <item>
      <title>Activate a language in PrestaShop</title>
      <link>https://devdocs.prestashop.com/1.7/development/internationalization/activate-a-language-in-prestashop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/internationalization/activate-a-language-in-prestashop/</guid>
      <description>Activate a language in PrestaShop Most languages are available in Crowdin for translation, but not all are available in PrestaShop (International &amp;gt; Translations &amp;gt; Add a language). Indeed, because of a low completion level on Crowdin, we do not send the translations to PrestaShop. However, it can be smart to add a language if its translators are very active and want to see the results of their Crowdin translations quickly in their own shop.</description>
    </item>
    
    <item>
      <title>Adding module links in the back-office side menu</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/controllers/admin-controllers/tabs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/controllers/admin-controllers/tabs/</guid>
      <description>Adding module links in the back-office side menu  On the PrestaShop back office, the links on the side menu are linked to AdminControllers and ModuleAdminController classes. The first ones come from the PrestaShop Core, but the second ones are defined by the modules. If you want to add a link to your ModuleAdminControllers in the back office sidebar, this guide is for you.
Tabs registration In order to register new links, open your main module class.</description>
    </item>
    
    <item>
      <title>Addresses</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/addresses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/addresses/</guid>
      <description>Resources for Addresses Address    Name Format Required Max size Description     id_customer isNullOrUnsignedId ❌  Customer ID   id_manufacturer isNullOrUnsignedId ❌  Manufacturer ID   id_supplier isNullOrUnsignedId ❌  Supplier ID   id_warehouse isNullOrUnsignedId ❌  Warehouse ID   id_country isUnsignedId ✔️  Country ID   id_state isNullOrUnsignedId ❌  State ID   alias isGenericName ✔️ 32    company isGenericName ❌ 255    lastname isName ✔️ 255    firstname isName ✔️ 255    vat_number isGenericName ❌     address1 isAddress ✔️ 128    address2 isAddress ❌ 128    postcode isPostCode ❌ 12    city isCityName ✔️ 64    other isMessage ❌ 300    phone isPhoneNumber ❌ 32    phone_mobile isPhoneNumber ❌ 32    dni isDniLite ❌ 16    deleted isBool ❌     date_add isDate ❌     date_upd isDate ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Backward compatibility with PrestaShop 1.6</title>
      <link>https://devdocs.prestashop.com/1.7/modules/core-updates/1.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/core-updates/1.6/</guid>
      <description>Backward compatibility with PrestaShop 1.6 If you plan to develop a module for PrestaShop 1.7 then extending the compatibility with previous major versions of PrestaShop, it may require some changes before being ready for production.
Namespaces PrestaShop 1.6 does not fully support namespaces. They throw some issues when used in specific places.
 In the main class of your module, the keyword use [...]; will trigger syntax errors when PrestaShop will try to parse the file.</description>
    </item>
    
    <item>
      <title>Callout</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/documentation/shortcodes/callout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/documentation/shortcodes/callout/</guid>
      <description>Callout This shortcode allows you to display a block inside your document to make some information stand out.
As with all shortcodes, keep in mind that headers inside won&amp;rsquo;t appear in the article&amp;rsquo;s table of contents. {{% callout %}} #### This is a callout  This is a very important block of text. Also, notice how the title doesn&amp;#39;t appear in the table of contents. {{% /callout %}} Rendered result:</description>
    </item>
    
    <item>
      <title>Carriers</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/carriers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/carriers/</guid>
      <description>Resources for Carriers Carrier    Name Format Required Max size Not filterable Description     deleted isBool ❌      is_module isBool ❌      id_tax_rules_group  ❌  true Tax rules group ID   id_reference  ❌   Reference ID   name isCarrierName ✔️ 64     active isBool ✔️      is_free isBool ❌      url isAbsoluteUrl ❌      shipping_handling isBool ❌      shipping_external  ❌      range_behavior isBool ❌      shipping_method isUnsignedInt ❌      max_width isUnsignedInt ❌      max_height isUnsignedInt ❌      max_depth isUnsignedInt ❌      max_weight isFloat ❌      grade isUnsignedInt ❌ 1     external_module_name  ❌ 64     need_range  ❌      position  ❌      delay isGenericName ✔️ 512      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Cart rules</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/cart_rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/cart_rules/</guid>
      <description>Resources for Cart rules Cart_rule    Name Format Required Max size Description     id_customer isUnsignedId ❌  Customer ID   date_from isDate ✔️     date_to isDate ✔️     description isCleanHtml ❌ 65534    quantity isUnsignedInt ❌     quantity_per_user isUnsignedInt ❌     priority isUnsignedInt ❌     partial_use isBool ❌     code isCleanHtml ❌ 254    minimum_amount isFloat ❌     minimum_amount_tax isBool ❌     minimum_amount_currency isInt ❌     minimum_amount_shipping isBool ❌     country_restriction isBool ❌     carrier_restriction isBool ❌     group_restriction isBool ❌     cart_rule_restriction isBool ❌     product_restriction isBool ❌     shop_restriction isBool ❌     free_shipping isBool ❌     reduction_percent isPercentage ❌     reduction_amount isFloat ❌     reduction_tax isBool ❌     reduction_currency isUnsignedId ❌     reduction_product isInt ❌     reduction_exclude_special isBool ❌     gift_product isUnsignedId ❌     gift_product_attribute isUnsignedId ❌     highlight isBool ❌     active isBool ❌     date_add isDate ❌     date_upd isDate ❌     name isCleanHtml ✔️ 254     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Carts</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/carts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/carts/</guid>
      <description>Resources for Carts Cart    Name Format Required Max size Description     id_address_delivery isUnsignedId ❌  Delivery address ID   id_address_invoice isUnsignedId ❌  Invoice address ID   id_currency isUnsignedId ✔️  Currency ID   id_customer isUnsignedId ❌  Customer ID   id_guest isUnsignedId ❌  Guest ID   id_lang isUnsignedId ✔️  Lang ID   id_shop_group isUnsignedId ❌  Shop group ID   id_shop isUnsignedId ❌  Shop ID   id_carrier isUnsignedId ❌  Carrier ID   recyclable isBool ❌     gift isBool ❌     gift_message isMessage ❌     mobile_theme isBool ❌     delivery_option  ❌     secure_key  ❌ 32    allow_seperated_package isBool ❌     date_add isDate ❌     date_upd isDate ❌     associations  ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Categories</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/categories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/categories/</guid>
      <description>Resources for Categories Category    Name Format Required Writable Max size Not filterable Description     id_parent isUnsignedInt ❌ ✔️   Parent ID   level_depth isUnsignedInt ❌ ❌      nb_products_recursive  ❌ ❌  true    active isBool ✔️ ✔️      id_shop_default isUnsignedId ❌ ✔️   Default shop ID   is_root_category isBool ❌ ✔️      position  ❌ ✔️      date_add isDate ❌ ✔️      date_upd isDate ❌ ✔️      name isCatalogName ✔️ ✔️ 128     link_rewrite isLinkRewrite ✔️ ✔️ 128     description isCleanHtml ❌ ✔️      meta_title isGenericName ❌ ✔️ 255     meta_description isGenericName ❌ ✔️ 512     meta_keywords isGenericName ❌ ✔️ 255     associations  ❌ ✔️       Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>CategoryChoiceTreeType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/category-choice-tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/category-choice-tree/</guid>
      <description>CategoryChoiceTreeType CategoryChoiceTreeType is a child of MaterialChoiceTreeType, it extends parent options with options listed bellow. It is used to display category tree selection box and requires Javascript components.
Type options    Option Type Default value Description     choices_tree array Array of all available categories Values to choose from in choices tree   choice_label string name An array key which should be targeted in provided choices list to get the label for input   choice_value string id_category An array key which should be targeted in provided choices list to get the value for input    Required Javascript components    Component Description     .</description>
    </item>
    
    <item>
      <title>ChangePasswordType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/change-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/change-password/</guid>
      <description>ChangePasswordType ChangePasswordType is used to create form for changing password and has a built-in new password generator which requires Javascript components.
Required Javascript components    Component Description     ../admin-dev/themes/new-theme/js/components/form/change-password-control.js Generates random passwords, validates new password and it&amp;rsquo;s confirmation, displays error messages related to validation    Code example &amp;lt;?php // path/to/your/CustomType.php  use PrestaShopBundle\Form\Admin\Type\ChangePasswordType; use Symfony\Component\Form\AbstractType; class CustomType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;change_password&amp;#39;, ChangePasswordType::class) ; } } Then in Javascript you have to enable ChangePasswordControl component.</description>
    </item>
    
    <item>
      <title>Changes in PrestaShop 1.7.5</title>
      <link>https://devdocs.prestashop.com/1.7/modules/core-updates/1.7.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/core-updates/1.7.5/</guid>
      <description>Notable changes in PrestaShop 1.7.5 LazyArrays Starting with PrestaShop 1.7.5, the business objects (Product, Order&amp;hellip;) available on the front-office are LazyArray instances. If your module relies on data available in the hook parameters or in the template, you may be concerned by this update.
They used to be arrays with all the data available. This change has been introduced to load the needed properties of an object only when requested, and globally improve the performance of the front-office.</description>
    </item>
    
    <item>
      <title>Changes in PrestaShop 1.7.6</title>
      <link>https://devdocs.prestashop.com/1.7/modules/core-updates/1.7.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/core-updates/1.7.6/</guid>
      <description>Notable changes in PrestaShop 1.7.6 CLDR The CLDR is a component responsible of displaying data such as the date &amp;amp; time, prices depending on a given language. It was reworked during several versions of PrestaShop 1.7, and will be enabled with 1.7.6. The previous one has been removed, and trying to use it will end to an exception.
A new variable is now available in the Context when going through a controller:</description>
    </item>
    
    <item>
      <title>Changes in PrestaShop 1.7.7</title>
      <link>https://devdocs.prestashop.com/1.7/modules/core-updates/1.7.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/core-updates/1.7.7/</guid>
      <description>Notable changes in PrestaShop 1.7.7 PHP support PrestaShop 1.7.7 adds supports for PHP 7.3 and requires at least PHP 7.1.3. Older PHP versions are no longer supported.
Updated dependencies The following dependencies have been updated in order to provide support for PHP 7.3:
   Extension Old version New version     beberlei/doctrineextensions v1.1.9 v1.2.6   behat/transliterator v1.2.0 v1.3.0   composer/ca-bundle 1.1.4 1.2.6   composer/installers v1.</description>
    </item>
    
    <item>
      <title>Code of Conduct</title>
      <link>https://devdocs.prestashop.com/1.7/project/code-of-conduct/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/code-of-conduct/</guid>
      <description>Code of Conduct The following code of conduct was originally published here. Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</description>
    </item>
    
    <item>
      <title>Combinations</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/combinations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/combinations/</guid>
      <description>Resources for Combinations Combination    Name Format Required Max size Description     id_product isUnsignedId ✔️  Product ID   location isGenericName ❌ 64    ean13 isEan13 ❌ 13    isbn isIsbn ❌ 32    upc isUpc ❌ 12    mpn isMpn ❌ 40    quantity isInt ❌ 10    reference  ❌ 64    supplier_reference  ❌ 64    wholesale_price isPrice ❌ 27    price isNegativePrice ❌ 20    ecotax isPrice ❌ 20    weight isFloat ❌     unit_price_impact isNegativePrice ❌ 20    minimal_quantity isUnsignedId ✔️     low_stock_threshold isInt ❌     low_stock_alert isBool ❌     default_on isBool ❌     available_date isDateFormat ❌     associations  ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Configurations</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/configurations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/configurations/</guid>
      <description>Resources for Configurations Configuration    Name Format Required Max size Description     value  ❌     name isConfigName ✔️ 254    id_shop_group isUnsignedId ❌  Shop group ID   id_shop isUnsignedId ❌  Shop ID   date_add isDate ❌     date_upd isDate ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;value&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/value&amp;gt; &amp;lt;name&amp;gt;&amp;lt;!</description>
    </item>
    
    <item>
      <title>Contacts</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/contacts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/contacts/</guid>
      <description>Resources for Contacts Contact    Name Format Required Max size Description     email isEmail ❌ 255    customer_service isBool ❌     name isGenericName ✔️ 255    description isCleanHtml ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;contact&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;email&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/email&amp;gt; &amp;lt;customer_service&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/customer_service&amp;gt; &amp;lt;name&amp;gt; &amp;lt;language id=&amp;#34;1&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;language id=&amp;#34;2&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;/name&amp;gt; &amp;lt;description&amp;gt; &amp;lt;language id=&amp;#34;1&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;language id=&amp;#34;2&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;/description&amp;gt; &amp;lt;/contact&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>Content management system</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/content_management_system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/content_management_system/</guid>
      <description>Resources for Content management system Content    Name Format Required Max size Description     id_cms_category isUnsignedInt ❌  CMS Category ID   position  ❌     indexation  ❌     active  ❌     meta_description isGenericName ❌ 512    meta_keywords isGenericName ❌ 255    meta_title isGenericName ✔️ 255    head_seo_title isGenericName ❌ 255    link_rewrite isLinkRewrite ✔️ 128    content isCleanHtml ❌ 3999999999999     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Countries</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/countries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/countries/</guid>
      <description>Resources for Countries Country    Name Format Required Max size Description     id_zone isUnsignedId ✔️  Zone ID   id_currency isUnsignedId ❌  Currency ID   call_prefix isInt ❌     iso_code isLanguageIsoCode ✔️ 3    active isBool ❌     contains_states isBool ✔️     need_identification_number isBool ✔️     need_zip_code isBool ❌     zip_code_format isZipCodeFormat ❌     display_tax_label isBool ✔️     name isGenericName ✔️ 64     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>CountryChoiceType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/country-choice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/country-choice/</guid>
      <description>CountryChoiceType CountryChoiceType is a child of ChoiceType. It is used to display countries selection box and by default comes with a list of countries from PrestaShop database.
Type options    Option Type Default value Description      choices array Array of all available countries Choice list that is passed to parent &amp;lsquo;choices&amp;rsquo;. Array should be formatted in name =&amp;gt; value pairs.     Required Javascript components None.</description>
    </item>
    
    <item>
      <title>Currencies</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/currencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/currencies/</guid>
      <description>Resources for Currencies Currency    Name Format Required Max size Not filterable Description     names  ❌      name isGenericName ✔️ 255 true    symbol  ❌ 255     iso_code isLanguageIsoCode ✔️ 3     numeric_iso_code isNumericIsoCode ❌ 3     precision isInt ❌      conversion_rate isUnsignedFloat ✔️      deleted isBool ❌      active isBool ❌      unofficial isBool ❌      modified isBool ❌      pattern  ❌ 255      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Customer messages</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/customer_messages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/customer_messages/</guid>
      <description>Resources for Customer messages Customer_message    Name Format Required Max size Description     id_employee isUnsignedId ❌  Employee ID   id_customer_thread  ❌  Customer Thread ID   ip_address isIp2Long ❌ 15    message isCleanHtml ✔️ 16777216    file_name  ❌     user_agent  ❌     private  ❌     date_add isDate ❌     date_upd isDate ❌     read isBool ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Customer threads</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/customer_threads/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/customer_threads/</guid>
      <description>Resources for Customer threads Customer_thread    Name Format Required Max size Description     id_lang isUnsignedId ✔️  Lang ID   id_shop isUnsignedId ❌  Shop ID   id_customer isUnsignedId ❌  Customer ID   id_order isUnsignedId ❌  Order ID   id_product isUnsignedId ❌  Product ID   id_contact isUnsignedId ✔️  Contact ID   email isEmail ❌ 255    token isGenericName ✔️     status  ❌     date_add isDate ❌     date_upd isDate ❌     associations  ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Customers</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/customers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/customers/</guid>
      <description>Resources for Customers Customer    Name Format Required Writable Max size Description     id_default_group  ❌ ✔️  Default group ID   id_lang isUnsignedId ❌ ✔️  Lang ID   newsletter_date_add  ❌ ✔️     ip_registration_newsletter  ❌ ✔️     last_passwd_gen  ❌ ❌     secure_key isMd5 ❌ ❌     deleted isBool ❌ ✔️     passwd isPasswd ✔️ ✔️ 255    lastname isCustomerName ✔️ ✔️ 255    firstname isCustomerName ✔️ ✔️ 255    email isEmail ✔️ ✔️ 255    id_gender isUnsignedId ❌ ✔️  Gender ID   birthday isBirthDate ❌ ✔️     newsletter isBool ❌ ✔️     optin isBool ❌ ✔️     website isUrl ❌ ✔️     company isGenericName ❌ ✔️     siret isGenericName ❌ ✔️     ape isApe ❌ ✔️     outstanding_allow_amount isFloat ❌ ✔️     show_public_prices isBool ❌ ✔️     id_risk isUnsignedInt ❌ ✔️  Risk ID   max_payment_days isUnsignedInt ❌ ✔️     active isBool ❌ ✔️     note isCleanHtml ❌ ✔️ 65000    is_guest isBool ❌ ✔️     id_shop isUnsignedId ❌ ✔️  Shop ID   id_shop_group isUnsignedId ❌ ✔️  Shop group ID   date_add isDate ❌ ✔️     date_upd isDate ❌ ✔️     reset_password_token isSha1 ❌ ✔️ 40    reset_password_validity isDateOrNull ❌ ✔️     associations  ❌ ✔️      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Customizations</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/customizations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/customizations/</guid>
      <description>Resources for Customizations Customization    Name Format Required Description     id_address_delivery isUnsignedId ✔️ Delivery address ID   id_cart isUnsignedId ✔️ Cart ID   id_product isUnsignedId ✔️ Product ID   id_product_attribute isUnsignedId ✔️ Product attribute ID   quantity isUnsignedId ✔️    quantity_refunded isUnsignedId ✔️    quantity_returned isUnsignedId ✔️    in_cart isBool ✔️    associations  ❌     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>DatePickerType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/date-picker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/date-picker/</guid>
      <description>DatePickerType DatePickerType creates a field with a date picker. It uses Javascript, but doesn&amp;rsquo;t require any specific components, as it&amp;rsquo;s already enabled globally.
Custom options None.
Required Javascript components None.
Code example &amp;lt;?php // path/to/your/CustomType.php  use PrestaShopBundle\Form\Admin\Type\DatePickerType; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; class CustomType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;date_from&amp;#39;, DatePickerType::class) -&amp;gt;add(&amp;#39;date_to&amp;#39;, DatePickerType::class); } } Preview example   DatePickerType rendered in form example   </description>
    </item>
    
    <item>
      <title>DateRangeType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/date-range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/date-range/</guid>
      <description>DateRangeType DateRangeType combines two DatePickers to create date range picker. It uses Javascript, but doesn&amp;rsquo;t require any specific components, as it&amp;rsquo;s already enabled globally.
Custom options None.
Required Javascript components None.
Code example &amp;lt;?php // path/to/your/CustomType.php  use PrestaShopBundle\Form\Admin\Type\DateRangeType; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; class CustomType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { // this will render a date range picker with 2 DatePickerTypes  // named &amp;#39;date_add_from&amp;#39; and &amp;#39;date_add_to&amp;#39;  $builder-&amp;gt;add(&amp;#39;date_add&amp;#39;, DateRangeType::class); } } Preview example   DateRangeType rendered in form example   </description>
    </item>
    
    <item>
      <title>Deliveries</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/deliveries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/deliveries/</guid>
      <description>Resources for Deliveries Delivery    Name Format Required Description     id_carrier isUnsignedId ✔️ Carrier ID   id_range_price isUnsignedId ✔️ Range price ID   id_range_weight isUnsignedId ✔️    id_zone isUnsignedId ✔️ Zone ID   id_shop  ❌ Shop ID   id_shop_group  ❌ Shop group ID   price isPrice ✔️     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;delivery&amp;gt; &amp;lt;id&amp;gt;&amp;lt;!</description>
    </item>
    
    <item>
      <title>Employees</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/employees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/employees/</guid>
      <description>Resources for Employees Employee    Name Format Required Writable Max size Description     id_lang isUnsignedInt ✔️ ✔️  Lang ID   last_passwd_gen  ❌ ❌     stats_date_from isDate ❌ ❌     stats_date_to isDate ❌ ❌     stats_compare_from isDate ❌ ❌     stats_compare_to isDate ❌ ❌     passwd isPasswd ✔️ ✔️ 255    lastname isName ✔️ ✔️ 255    firstname isName ✔️ ✔️ 255    email isEmail ✔️ ✔️ 255    active isBool ❌ ✔️     id_profile isInt ✔️ ✔️  Profile ID   bo_color isColor ❌ ✔️ 32    default_tab isInt ❌ ✔️     bo_theme isGenericName ❌ ✔️ 32    bo_css isGenericName ❌ ✔️ 64    bo_width isUnsignedInt ❌ ✔️     bo_menu isBool ❌ ✔️     stats_compare_option isUnsignedInt ❌ ✔️     preselect_date_range  ❌ ✔️ 32    id_last_order isUnsignedInt ❌ ✔️  Last order ID   id_last_customer_message isUnsignedInt ❌ ✔️  Last customer message ID   id_last_customer isUnsignedInt ❌ ✔️  Last customer ID   reset_password_token isSha1 ❌ ✔️ 40    reset_password_validity isDateOrNull ❌ ✔️     has_enabled_gravatar isBool ❌ ✔️      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Exporting your theme</title>
      <link>https://devdocs.prestashop.com/1.7/themes/distribution/exporting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/distribution/exporting/</guid>
      <description>Exporting your theme Creating a valid ZIP file There is no longer any theme data in the database with PrestaShop 1.7. Hence a theme is installed as soon as it is on the disk.
If you want the theme to appears in the backoffice, it only needs to contain a config/theme.yml file. This will only display it, if you want to select it as your active theme, it has to be valid.</description>
    </item>
    
    <item>
      <title>FormattedTextareaType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/formatted-textarea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/formatted-textarea/</guid>
      <description>FormattedTextareaType Enables TinyMCE text editor on TextareaType.
Type options    Option Type Default value Description     autoload bool true Whether to automatically load TinyMCE editor, or no.   limit int 21844 Limit of characters in text field. By default value equals to max size of UTF-8 content available in MySQL text column    Required Javascript components None.
Code example &amp;lt;?php // path/to/your/CustomType.php  use PrestaShopBundle\Form\Admin\Type\FormattedTextareaType; class CustomType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add( &amp;#39;test_text_field&amp;#39;, FormattedTextareaType::class ) ; } } Preview example   FormattedTextareaType rendered in form example   </description>
    </item>
    
    <item>
      <title>Function definition</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/documentation/shortcodes/funcdef/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/documentation/shortcodes/funcdef/</guid>
      <description>Function definition To render a list of function definitions, use funcdef in combination with Markdown definition list:
{{% funcdef %}} __construct($id = NULL, $id_lang = NULL) : Build object. add($autodate = true, $nullValues = false) : Save current object to database (add or update). {{% /funcdef %}} Rendered result:
 __construct($id = NULL, $id_lang = NULL) Build object. add($autodate = true, $nullValues = false) Save current object to database (add or update).</description>
    </item>
    
    <item>
      <title>GeneratableTextType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/generatable-text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/generatable-text/</guid>
      <description>GeneratableTextType Extends TextType with additional button which allows to generate random value for input.
Type options    Option Type Default value Description     generated_value_length int 32 The length of value to be generated    Required Javascript components    Component Description     ../admin-dev/themes/new-theme/js/components/form/generatable-input.js Generates a random value for input.    Code example &amp;lt;?php // path/to/your/CustomType.php  use PrestaShopBundle\Form\Admin\Type\GeneratableTextType; class CustomType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;key&amp;#39;, GeneratableTextType::class, [ &amp;#39;generated_value_length&amp;#39; =&amp;gt; 16, ]) ; } } Then in Javascript you have to enable GeneratableInput component.</description>
    </item>
    
    <item>
      <title>Good practices for developing modules</title>
      <link>https://devdocs.prestashop.com/1.7/modules/creation/good-practices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/creation/good-practices/</guid>
      <description>Good practices for developing modules DOs and DON&amp;rsquo;Ts Do  Add a link to your documentation included in your ZIP File and to your support page on Addons in the module interface. Follow our Coding Standards Create your own database tables, do not alter PrestaShop&amp;rsquo;s. Develop your module in English, then use PrestaShop translation system to translate your module. Go through directories using PrestaShop constants like: _PS_CONFIG_DIR_ . &#39;/config.inc.php&#39; CREATE TABLE SQL statements must be followed by IF NOT EXISTS to avoid SQL errors DROP TABLE SQL statements must be followed by IF EXISTS to avoid SQL errors  Don&amp;rsquo;t  Don&amp;rsquo;t insert external links into your module code or module documentation.</description>
    </item>
    
    <item>
      <title>Groups</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/groups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/groups/</guid>
      <description>Resources for Groups Group    Name Format Required Max size Description     reduction isFloat ❌     price_display_method isPriceDisplayMethod ✔️     show_prices isBool ❌     date_add isDate ❌     date_upd isDate ❌     name isGenericName ✔️ 32     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;group&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;reduction&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/reduction&amp;gt; &amp;lt;price_display_method&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/price_display_method&amp;gt; &amp;lt;show_prices&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/show_prices&amp;gt; &amp;lt;date_add&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/date_add&amp;gt; &amp;lt;date_upd&amp;gt;&amp;lt;!</description>
    </item>
    
    <item>
      <title>Guests</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/guests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/guests/</guid>
      <description>Resources for Guests Guest    Name Format Required Max size Description     id_customer isUnsignedId ❌  Customer ID   id_operating_system isUnsignedId ❌  Operating system ID   id_web_browser isUnsignedId ❌  Web browser ID   javascript isBool ❌     screen_resolution_x isInt ❌     screen_resolution_y isInt ❌     screen_color isInt ❌     sun_java isBool ❌     adobe_flash isBool ❌     adobe_director isBool ❌     apple_quicktime isBool ❌     real_player isBool ❌     windows_media isBool ❌     accept_language isGenericName ❌ 8    mobile_theme isBool ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>How to become a maintainer</title>
      <link>https://devdocs.prestashop.com/1.7/project/maintainers-guide/how-to-become-a-maintainer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/maintainers-guide/how-to-become-a-maintainer/</guid>
      <description>How to become a maintainer In the PrestaShop project, maintainers are contributors with merge rights.
The maintainer status is a position of great power, but it also carries great responsibility. As gatekeepers to the project&amp;rsquo;s code, maintainers are ultimately responsible for every contribution that is included in the project.
Requirements to become a maintainer  Active participation in the project  Display a record of several accepted, quality Pull Requests having received little or no objections from maintainers.</description>
    </item>
    
    <item>
      <title>I need help</title>
      <link>https://devdocs.prestashop.com/1.7/faq/i-need-help/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/faq/i-need-help/</guid>
      <description>I need help If you have questions or need help, please do not open a GitHub issue as we use GitHub issues only to discuss about bugs and new features for the PrestaShop project.
The very best place to start looking for an answer is:
 Here (the Developer documentation), if you are a developer The User&amp;rsquo;s guide if you are a user  If you are a developer and you think there is a missing item in the Developer documentation, consider creating an issue on the Documentation Repository.</description>
    </item>
    
    <item>
      <title>Image types</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/image_types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/image_types/</guid>
      <description>Resources for Image types Image_type    Name Format Required Max size Description     name isImageTypeName ✔️ 64    width isImageSize ✔️     height isImageSize ✔️     categories isBool ❌     products isBool ❌     manufacturers isBool ❌     suppliers isBool ❌     stores isBool ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>IntegerMinMaxFilterType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/integer-min-max-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/integer-min-max-filter/</guid>
      <description>IntegerMinMaxFilterType The IntegerMinMaxFilterType represents two IntegerType fields - one holds minimum value of integer type and other holds maximum value. IntegerType is one of the native symfony types.
Type options    Option Type Default Description     min_field_options array array ( &amp;lsquo;attr&amp;rsquo; =&amp;gt; array ( &amp;lsquo;placeholder&amp;rsquo; =&amp;gt; $this-&amp;gt;trans(&amp;lsquo;Min&amp;rsquo;, [], &amp;lsquo;Admin.Global&amp;rsquo;), &amp;lsquo;min&amp;rsquo; =&amp;gt; 0, &amp;lsquo;step&amp;rsquo; =&amp;gt; 1, ), ) Accepts all possible values that IntegerType has*   max_field_options array array ( &amp;lsquo;attr&amp;rsquo; =&amp;gt; array ( &amp;lsquo;placeholder&amp;rsquo; =&amp;gt; $this-&amp;gt;trans(&amp;lsquo;Max&amp;rsquo;, [], &amp;lsquo;Admin.</description>
    </item>
    
    <item>
      <title>Interacting with APIs</title>
      <link>https://devdocs.prestashop.com/1.7/modules/creation/external-services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/creation/external-services/</guid>
      <description>Interacting with APIs There are different options to transfer data between your shop and any external service. The method you choose will depend on the usecase:
 if data must be pulled or pushed to the shop, if one specific application (the shop or an external service) must initiate the calls, if there are constraints on the implementation (i.e a cron job scheduler is required).  Requests to a shop You may retrieve and update data from a shop using different methods:</description>
    </item>
    
    <item>
      <title>IpAddressType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/ip-address/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/ip-address/</guid>
      <description>IpAddressType Extends TextType with additional button which inserts current device ip address to input.
Type options None.
Required Javascript components    Component Description     ../admin-dev/themes/new-theme/js/maintenance-page/ip-input.js Inserts current device ip address to input.    Code example &amp;lt;?php // path/to/your/CustomType.php  use PrestaShopBundle\Form\Admin\Type\IpAddressType; class CustomType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add( &amp;#39;my_ip&amp;#39;, IpAddressType::class ) ; } } Then in Javascript you have to enable IpInput component.</description>
    </item>
    
    <item>
      <title>Languages</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/languages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/languages/</guid>
      <description>Resources for Languages Language    Name Format Required Max size Description     name isGenericName ✔️ 32    iso_code isLanguageIsoCode ✔️ 2    locale isLocale ❌ 5    language_code isLanguageCode ❌ 5    active isBool ❌     is_rtl isBool ❌     date_format_lite isPhpDateFormat ✔️ 32    date_format_full isPhpDateFormat ✔️ 32     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Legacy Controllers</title>
      <link>https://devdocs.prestashop.com/1.7/development/architecture/legacy/legacy-controllers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/architecture/legacy/legacy-controllers/</guid>
      <description>Legacy Controllers Legacy controllers are based on PrestaShop&amp;rsquo;s custom framework and go a long way back. All front controllers and all Admin controllers that haven&amp;rsquo;t been migrated to Symfony yet are based on this.
Execution flow Legacy controllers work best when a Controller performs a single action, for example, render a page. The process has been divided in several methods, which simplifies customization via method override.
  Execution flow of legacy controllers   </description>
    </item>
    
    <item>
      <title>License &amp; license compatibility</title>
      <link>https://devdocs.prestashop.com/1.7/project/maintainers-guide/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/maintainers-guide/license/</guid>
      <description>License &amp;amp; license compatibility In order to protect PrestaShop users from patent trolls, it&amp;rsquo;s important to make sure that all content included and distributed with PrestaShop is covered under homogeneous license terms.
The PrestaShop Core software is released under the OSL 3.0 license. Therefore, all original work included in PrestaShop itself must be released under that license as well.
PrestaShop&amp;rsquo;s Native Modules and the Classic theme are released under the AFL 3.</description>
    </item>
    
    <item>
      <title>Manufacturers</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/manufacturers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/manufacturers/</guid>
      <description>Resources for Manufacturers Manufacturer    Name Format Required Writable Max size Not filterable Description     active  ❌ ✔️      link_rewrite  ❌ ❌  true    name isCatalogName ✔️ ✔️ 64     date_add  ❌ ✔️      date_upd  ❌ ✔️      description isCleanHtml ❌ ✔️      short_description isCleanHtml ❌ ✔️      meta_title isGenericName ❌ ✔️ 255     meta_description isGenericName ❌ ✔️ 512     meta_keywords isGenericName ❌ ✔️      associations  ❌ ✔️       Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>MaterialChoiceTableType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/material-choice-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/material-choice-table/</guid>
      <description>MaterialChoiceTableType MaterialChoiceTableType renders checkbox choices using table layout. It requires Javascript component to work as expected.
Type options    Option Type Default value Description     expanded bool true Whether the table should be expanded by default or not   multiple bool true Whether to enable multiple checkboxes selection or no    Required Javascript components    Component Description     .</description>
    </item>
    
    <item>
      <title>MaterialChoiceTreeType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/material-choice-tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/material-choice-tree/</guid>
      <description>MaterialChoiceTreeType MaterialChoiceTreeType renders checkbox choices using choices tree layout. Requires Javascript component to work as expected.
Type options    Option Type Default value Description     choices_tree array [] The choices array to select from   choice_label string &amp;lsquo;name&amp;rsquo; The key in options array to target when getting label for checkbox   choice_value string &amp;lsquo;id&amp;rsquo; The key in options array to target when getting value for checkbox   choice_children string &amp;lsquo;children&amp;rsquo; The key in options array to target when getting the child for checkbox   multiple bool true Whether to enable multiple checkboxes selection or no   disabled_values array [] Array of ids to disable in choices tree    Required Javascript components    Component Description     .</description>
    </item>
    
    <item>
      <title>MaterialMultipleChoiceTableType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/material-multiple-choice-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/material-multiple-choice-table/</guid>
      <description>MaterialMultipleChoiceTableType MaterialMultipleChoiceTableType renders checkbox choices using choices table layout. It is similar to MaterialChoiceTableType, but it allows using multiple checkboxes per row. Requires Javascript component to work as expected.
Type options    Option Type Default value Description     multiple_choices array none Each item of array should contain a name which represents column header and valid options for ChoiceType including the &amp;lsquo;choices&amp;rsquo; array which values are rendered as column selections   choices array none The &amp;lsquo;choices&amp;rsquo; array for ChoiceType.</description>
    </item>
    
    <item>
      <title>Messages</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/messages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/messages/</guid>
      <description>Resources for Messages Message    Name Format Required Max size Description     id_cart isUnsignedId ❌  Cart ID   id_order isUnsignedId ❌  Order ID   id_customer isUnsignedId ❌  Customer ID   id_employee isUnsignedId ❌  Employee ID   message isCleanHtml ✔️ 1600    private isBool ❌     date_add isDate ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Migrating from PrestaShop 1.6</title>
      <link>https://devdocs.prestashop.com/1.7/themes/reference/migration-from-16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/reference/migration-from-16/</guid>
      <description>Migrating from PrestaShop 1.6 PrestaShop 1.7 introduces a totally reworked theme system from version 1.6, with the goal of making PrestaShop upgrades easier, and making it easier and faster to create a brand new theme.
The huge change to the theme system means that there is no easy way to migrate your PrestaShop 1.6 theme to PrestaShop 1.7.
When using the automatic upgrade from PrestaShop 1.6 to 1.7, your theme will be switched to the new default theme, called &amp;ldquo;Classic&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>MoneyWithSuffixType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/money-with-suffix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/money-with-suffix/</guid>
      <description>MoneyWithSuffixType The MoneyWithSuffixType represents input with currency suffix.
Type options    Option Type Default Description     currency string EUR Currency ISO code   suffix string Empty string Suffix text    Required Javascript components None.
Code example Add MoneyWithSuffixType to your form.
&amp;lt;?php use Symfony\Component\Form\AbstractType; use PrestaShopBundle\Form\Admin\Type\MoneyWithSuffixType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;price&amp;#39;, MoneyWithSuffixType::class, [ &amp;#39;currency&amp;#39; =&amp;gt; &amp;#39;EUR&amp;#39;, &amp;#39;suffix&amp;#39; =&amp;gt; &amp;#39;(tax excl.</description>
    </item>
    
    <item>
      <title>Native module translation</title>
      <link>https://devdocs.prestashop.com/1.7/development/internationalization/translation/native-module-translation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/internationalization/translation/native-module-translation/</guid>
      <description>Native module translation The module&amp;rsquo;s text strings are written in English, but you might want French, Spanish or Polish shop owners to use your module too. You therefore have to translate those strings into those languages, both the front office and the back office strings. Ideally, you should translate your module in all the languages that are installed on your shop. This could be a tedious task, but a whole system has been put in place in order to help you out.</description>
    </item>
    
    <item>
      <title>Note block</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/documentation/shortcodes/notice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/documentation/shortcodes/notice/</guid>
      <description>Notes / tip block You can add notice blocks to make some information stand out:
Note {{% notice note %}} This is something you may want to know. {{% /notice %}} Renders to:
This is something you may want to know. Tip {{% notice tip %}} Everything will be fine, trust me. {{% /notice %}} Renders to:
Everything will be fine, trust me. Info {{% notice info %}} This is pretty important, you should pay attention.</description>
    </item>
    
    <item>
      <title>NumberMinMaxFilterType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/number-min-max-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/number-min-max-filter/</guid>
      <description>NumberMinMaxFilterType The NumberMinMaxFilterType represents two NumberType fields - one holds minimum value of float number type and other holds maximum value. NumberType is one of the native symfony types.
Type options    Option Type Default Description     min_field_options array array ( &amp;lsquo;attr&amp;rsquo; =&amp;gt; array ( &amp;lsquo;placeholder&amp;rsquo; =&amp;gt; $this-&amp;gt;trans(&amp;lsquo;Min&amp;rsquo;, [], &amp;lsquo;Admin.Global&amp;rsquo;)), ) Accepts all possible values that NumberType has   max_field_options array array ( &amp;lsquo;attr&amp;rsquo; =&amp;gt; array ( &amp;lsquo;placeholder&amp;rsquo; =&amp;gt; $this-&amp;gt;trans(&amp;lsquo;Max&amp;rsquo;, [], &amp;lsquo;Admin.</description>
    </item>
    
    <item>
      <title>Optimize your Apache httpd configuration</title>
      <link>https://devdocs.prestashop.com/1.7/scale/webservers/httpd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/scale/webservers/httpd/</guid>
      <description>Enabling compression As you may be aware of, most of the file transiting from the webserver (with the notable exception of pictures) are text based.
And text files are the most efficient to compress. Though disabled by default, enabling compression is a really quick way to reduce transit and speed up your website up to 80%!
First, make sure the deflate module is activated in your httpd configuration file:
LoadModule deflate_module modules/mod_deflate.</description>
    </item>
    
    <item>
      <title>Optimize your nginx configuration</title>
      <link>https://devdocs.prestashop.com/1.7/scale/webservers/nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/scale/webservers/nginx/</guid>
      <description>Enabling compression As you may be aware of, most of the file transiting from the webserver (with the notable exception of pictures) are text based.
And text files are the most efficient to compress. Though disabled by default, enabling compression is a really quick way to reduce transit and speed up your website up to 80%!
Here is the way to enable gzip compression to your nginx configuration:
gzip on; gzip_disable msie6; gzip_vary on; gzip_proxied any; gzip_static on; gzip_buffers 16 8k; gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml text/js; gzip_http_version 1.</description>
    </item>
    
    <item>
      <title>Optimize your PrestaShop</title>
      <link>https://devdocs.prestashop.com/1.7/scale/optimizations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/scale/optimizations/</guid>
      <description>Optimize your PrestaShop performance Before making any change on your PrestaShop instance, it is highly recommended to perform some benchmarks.
The idea behind this is to know what your baseline performance is, so that you can make sure that your changes are increasing your shop&amp;rsquo;s performance and not the other way around.
If you&amp;rsquo;ve done no benchmark beforehand, there is no way to ensure you did not decrease your performances in the end.</description>
    </item>
    
    <item>
      <title>Order carriers</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/order_carriers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/order_carriers/</guid>
      <description>Resources for Order carriers Order_carrier    Name Format Required Description     id_order isUnsignedId ✔️ Order ID   id_carrier isUnsignedId ✔️ Carrier ID   id_order_invoice isUnsignedId ❌ Order invoice ID   weight isFloat ❌    shipping_cost_tax_excl isFloat ❌    shipping_cost_tax_incl isFloat ❌    tracking_number isTrackingNumber ❌    date_add isDate ❌     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Order cart rules</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/order_cart_rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/order_cart_rules/</guid>
      <description>Resources for Order cart rules Order_cart_rule    Name Format Required Description     id_order isUnsignedId ✔️ Order ID   id_cart_rule isUnsignedId ✔️    id_order_invoice isUnsignedId ❌ Order invoice ID   name isCleanHtml ✔️    value isFloat ✔️    value_tax_excl isFloat ✔️    free_shipping isBool ❌    deleted isBool ❌     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Order details</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/order_details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/order_details/</guid>
      <description>Resources for Order details Order_detail    Name Format Required Description     id_order isUnsignedId ✔️ Order ID   product_id isUnsignedId ❌ Product ID   product_attribute_id isUnsignedId ❌ Product attribute ID   product_quantity_reinjected isUnsignedInt ❌    group_reduction isFloat ❌    discount_quantity_applied isInt ❌    download_hash isGenericName ❌    download_deadline isDateFormat ❌    id_order_invoice isUnsignedId ❌ Order invoice ID   id_warehouse isUnsignedId ✔️ Warehouse ID   id_shop isUnsignedId ✔️ Shop ID   id_customization isUnsignedId ❌ Customization ID   product_name isGenericName ✔️    product_quantity isInt ✔️    product_quantity_in_stock isInt ❌    product_quantity_return isUnsignedInt ❌    product_quantity_refunded isUnsignedInt ❌    product_price isPrice ✔️    reduction_percent isFloat ❌    reduction_amount isPrice ❌    reduction_amount_tax_incl isPrice ❌    reduction_amount_tax_excl isPrice ❌    product_quantity_discount isFloat ❌    product_ean13 isEan13 ❌    product_isbn isIsbn ❌    product_upc isUpc ❌    product_mpn isMpn ❌    product_reference isReference ❌    product_supplier_reference isReference ❌    product_weight isFloat ❌    tax_computation_method isUnsignedId ❌    id_tax_rules_group isInt ❌ Tax rules group ID   ecotax isFloat ❌    ecotax_tax_rate isFloat ❌    download_nb isInt ❌    unit_price_tax_incl isPrice ❌    unit_price_tax_excl isPrice ❌    total_price_tax_incl isPrice ❌    total_price_tax_excl isPrice ❌    total_shipping_price_tax_excl isPrice ❌    total_shipping_price_tax_incl isPrice ❌    purchase_supplier_price isPrice ❌    original_product_price isPrice ❌    original_wholesale_price isPrice ❌    total_refunded_tax_excl isPrice ❌    total_refunded_tax_incl isPrice ❌    associations  ❌     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Order histories</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/order_histories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/order_histories/</guid>
      <description>Resources for Order histories Order_history    Name Format Required Description     id_employee isUnsignedId ❌ Employee ID   id_order_state isUnsignedId ✔️    id_order isUnsignedId ✔️ Order ID   date_add isDate ❌     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;order_history&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;id_employee&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_employee&amp;gt; &amp;lt;id_order_state&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_order_state&amp;gt; &amp;lt;id_order&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_order&amp;gt; &amp;lt;date_add&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/date_add&amp;gt; &amp;lt;/order_history&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>Order invoices</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/order_invoices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/order_invoices/</guid>
      <description>Resources for Order invoices Order_invoice    Name Format Required Max size Description     id_order isUnsignedId ✔️  Order ID   number isUnsignedId ✔️     delivery_number isUnsignedId ❌     delivery_date isDateFormat ❌     total_discount_tax_excl  ❌     total_discount_tax_incl  ❌     total_paid_tax_excl  ❌     total_paid_tax_incl  ❌     total_products  ❌     total_products_wt  ❌     total_shipping_tax_excl  ❌     total_shipping_tax_incl  ❌     shipping_tax_computation_method  ❌     total_wrapping_tax_excl  ❌     total_wrapping_tax_incl  ❌     shop_address isCleanHtml ❌ 1000    note isCleanHtml ❌ 65000    date_add isDate ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Order payments</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/order_payments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/order_payments/</guid>
      <description>Resources for Order payments Order_payment    Name Format Required Max size Description     order_reference isAnything ❌ 9    id_currency isUnsignedId ✔️  Currency ID   amount isPrice ✔️     payment_method isGenericName ❌     conversion_rate isFloat ❌     transaction_id isAnything ❌ 254    card_number isAnything ❌ 254    card_brand isAnything ❌ 254    card_expiration isAnything ❌ 254    card_holder isAnything ❌ 254    date_add isDate ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Order slip</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/order_slip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/order_slip/</guid>
      <description>Resources for Order slip Order_slip    Name Format Required Description     id_customer isUnsignedId ✔️ Customer ID   id_order isUnsignedId ✔️ Order ID   conversion_rate isFloat ✔️    total_products_tax_excl isFloat ✔️    total_products_tax_incl isFloat ✔️    total_shipping_tax_excl isFloat ✔️    total_shipping_tax_incl isFloat ✔️    amount isFloat ❌    shipping_cost  ❌    shipping_cost_amount isFloat ❌    partial  ❌    date_add isDate ❌    date_upd isDate ❌    order_slip_type isInt ❌    associations  ❌     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Order states</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/order_states/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/order_states/</guid>
      <description>Resources for Order states Order_state    Name Format Required Max size Description     unremovable isBool ❌     delivery isBool ❌     hidden isBool ❌     send_email isBool ❌     module_name isModuleName ❌     invoice isBool ❌     color isColor ❌     logable isBool ❌     shipped isBool ❌     paid isBool ❌     pdf_delivery isBool ❌     pdf_invoice isBool ❌     deleted isBool ❌     name isGenericName ✔️ 64    template isTplName ❌ 64     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Orders</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/orders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/orders/</guid>
      <description>Resources for Orders Order    Name Format Required Not filterable Description     id_address_delivery isUnsignedId ✔️  Delivery address ID   id_address_invoice isUnsignedId ✔️  Invoice address ID   id_cart isUnsignedId ✔️  Cart ID   id_currency isUnsignedId ✔️  Currency ID   id_lang isUnsignedId ✔️  Lang ID   id_customer isUnsignedId ✔️  Customer ID   id_carrier isUnsignedId ✔️  Carrier ID   current_state isUnsignedId ❌     module isModuleName ✔️     invoice_number  ❌     invoice_date  ❌     delivery_number  ❌     delivery_date  ❌     valid  ❌     date_add isDate ❌     date_upd isDate ❌     shipping_number isTrackingNumber ❌ true    id_shop_group isUnsignedId ❌  Shop group ID   id_shop isUnsignedId ❌  Shop ID   secure_key isMd5 ❌     payment isGenericName ✔️     recyclable isBool ❌     gift isBool ❌     gift_message isMessage ❌     mobile_theme isBool ❌     total_discounts isPrice ❌     total_discounts_tax_incl isPrice ❌     total_discounts_tax_excl isPrice ❌     total_paid isPrice ✔️     total_paid_tax_incl isPrice ❌     total_paid_tax_excl isPrice ❌     total_paid_real isPrice ✔️     total_products isPrice ✔️     total_products_wt isPrice ✔️     total_shipping isPrice ❌     total_shipping_tax_incl isPrice ❌     total_shipping_tax_excl isPrice ❌     carrier_tax_rate isFloat ❌     total_wrapping isPrice ❌     total_wrapping_tax_incl isPrice ❌     total_wrapping_tax_excl isPrice ❌     round_mode isUnsignedId ❌     round_type isUnsignedId ❌     conversion_rate isFloat ✔️     reference  ❌     associations  ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Override or decorate a Core controller</title>
      <link>https://devdocs.prestashop.com/1.7/modules/concepts/controllers/admin-controllers/override-decorate-controller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/modules/concepts/controllers/admin-controllers/override-decorate-controller/</guid>
      <description>Override or decorate a Core controller  If you want to extend the behavior of a Back Office page in PrestaShop, you have multiple options.
Most of standard extension needs can be fulfilled using one hook.
If there is no hook available for your need, and you only need to modify the visual appearance of the page, you might want to override a template.
But sometimes you want to modify the page in a deeper way.</description>
    </item>
    
    <item>
      <title>Overriding modules</title>
      <link>https://devdocs.prestashop.com/1.7/themes/reference/overriding-modules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/reference/overriding-modules/</guid>
      <description>Overriding modules When you write a theme, you often need to override the templates and assets coming from a module so that they match your theme&amp;rsquo;s specific markup needs. Themes can override modules&#39; assets (CSS and JavaScript only) by placing the corresponding file at a specific location.
With PrestaShop 1.7, all module overriding code goes to the modules directory (in your module&amp;rsquo;s own directory). Every PS 1.7 module developer should be aware of this change (introduced with PR 5020: https://github.</description>
    </item>
    
    <item>
      <title>Overriding selectors</title>
      <link>https://devdocs.prestashop.com/1.7/themes/reference/overriding-selectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/reference/overriding-selectors/</guid>
      <description>Overriding selectors When you write a theme, you often need to change the markup, but if you do this, you&amp;rsquo;ll encounter some problems because core&amp;rsquo;s and classic&amp;rsquo;s javascript use some class in order to work.
Two selectors maps are available since 1.7.8 one on the core side (/themes/_core/js/selectors.js) and another one inside the classic theme (/themes/classic/_dev/js/selectors.js).
That means that almost every selectors we use inside every JS files are inside these two files.</description>
    </item>
    
    <item>
      <title>Parent/child theme</title>
      <link>https://devdocs.prestashop.com/1.7/themes/reference/template-inheritance/parent-child-feature/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/reference/template-inheritance/parent-child-feature/</guid>
      <description>Parent/child theme PrestaShop 1.7 relies a lot on template inheritance in order to create the most consistent theme possible while heavily reducing the amount of duplicated code.
We took it even further introducing the Parent Child theme feature. The point to is to avoid modifying the main theme so you can update it!
This feature is only useful if you want to slightly modify a theme (to add a block for example).</description>
    </item>
    
    <item>
      <title>prestashop:licenses:update</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-licenses-update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-licenses-update/</guid>
      <description>prestashop:licenses:update Informations  Path: src/PrestaShopBundle/Command/UpdateLicensesCommand.php  Description This command aims to rewrite your license headers to be up-to-date.
It works on multiple files extensions: .css, .html.twig, .js, .json, .php, .tpl, .vue.</description>
    </item>
    
    <item>
      <title>prestashop:linter:legacy-link</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-linter-legacy-link/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-linter-legacy-link/</guid>
      <description>prestashop:linter:legacy-link Informations  Path: src/PrestaShopBundle/Command/LegacyLinkLinterCommand.php  Description This command aims to check if _legacy_link is configured in BackOffice routes.</description>
    </item>
    
    <item>
      <title>prestashop:linter:naming-convention</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-linter-naming-convention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-linter-naming-convention/</guid>
      <description>prestashop:linter:naming-convention Informations  Path: src/PrestaShopBundle/Command/NamingConventionLinterCommand.php  Description This command aims to check if Back Office routes and controllers follow the following naming convention admin_{resources}_{action}.</description>
    </item>
    
    <item>
      <title>prestashop:linter:security-annotation</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-linter-security-annotation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-linter-security-annotation/</guid>
      <description>prestashop:linter:security-annotation Informations  Path: src/PrestaShopBundle/Command/SecurityAnnotationLinterCommand.php Arguments:  action: Action to perform, must be one of: list and find-missing    Description This command aims to check if Back Office controller routes have configured Security annotations.
Two options are available: Listing and Finding Missing.
Listing This option aims to list all routes, and their related permissions.
Finding missing This option aims to find routes with missing security annotations.</description>
    </item>
    
    <item>
      <title>prestashop:list:commands-and-queries</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-list-commands-and-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-list-commands-and-queries/</guid>
      <description>prestashop:list:commands-and-queries Informations  Path: src/PrestaShopBundle/Command/ListCommandsAndQueriesCommand.php  Description This command aims to list all available CQRS commands and queries.
That permits to list all classes, with their types (Command or Query) and their description.</description>
    </item>
    
    <item>
      <title>prestashop:mail:generate</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-mail-generate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-mail-generate/</guid>
      <description>prestashop:mail:generate Informations  Path: src/PrestaShopBundle/Command/GenerateMailTemplatesCommand.php Arguments:  theme: Theme to use for mail templates locale: Locale to use for the templates coreOutputFolder: Output folder to export core templates ((optional)) modulesOutputFolder: Output folder to export modules templates (by default same as core) ((optional))   Options:  --overwrite, -o: Overwrite existing templates (false, by default)    Description This command aims to generate mail templates for a specified theme.</description>
    </item>
    
    <item>
      <title>prestashop:module</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-module/</guid>
      <description>prestashop:module Informations  Path: src/PrestaShopBundle/Command/ModuleCommand.php Arguments:  action: Action to execute, must be one of: install, uninstall, enable, disable, enable_mobile, disable_mobile, reset, upgrade, configure module name: Module on which the action will be executed file path: YML file path for configuration (optional)    Description This command aims to manage your modules via command line.</description>
    </item>
    
    <item>
      <title>prestashop:schema:update-without-foreign</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-schema-update-without-foreign/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-schema-update-without-foreign/</guid>
      <description>prestashop:schema:update-without-foreign Informations  Path: src/PrestaShopBundle/Command/UpdateSchemaCommand.php  Description This command aims to update the database.</description>
    </item>
    
    <item>
      <title>prestashop:taxes:update-eu-tax-rule-groups</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-taxes-update-eu-tax-rule-groups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-taxes-update-eu-tax-rule-groups/</guid>
      <description>prestashop:taxes:update-eu-tax-rule-groups Informations  Path: src/PrestaShopBundle/Command/UpdateEUTaxruleGroupsCommand.php  Description This command aims to update EU Tax rule groups.</description>
    </item>
    
    <item>
      <title>prestashop:theme:enable</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-theme-enable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-theme-enable/</guid>
      <description>prestashop:theme:enable Informations  Path: src/PrestaShopBundle/Command/ThemeEnablerCommand.php Arguments:  theme: Module on which the action will be executed    Description This command aims to enable your theme via command line.</description>
    </item>
    
    <item>
      <title>prestashop:theme:export</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-theme-export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-theme-export/</guid>
      <description>prestashop:theme:export Informations  Path: src/PrestaShopBundle/Command/ExportThemeCommand.php Arguments:  theme: Directory name of the theme to export    Description This command aims to create a zip file to distribute a theme with its dependencies.</description>
    </item>
    
    <item>
      <title>prestashop:translation:find-duplicates</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-translation-find-duplicates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-translation-find-duplicates/</guid>
      <description>prestashop:translation:find-duplicates Informations  Path: src/PrestaShopBundle/Command/CheckTranslationDuplicatesCommand.php  Description This command aims to find duplicates in your translations.</description>
    </item>
    
    <item>
      <title>prestashop:update:configuration-file-hooks-listing</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-update-configuration-file-hooks-listing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-update-configuration-file-hooks-listing/</guid>
      <description>prestashop:update:configuration-file-hooks-listing Informations  Path: src/PrestaShopBundle/Command/AppendConfigurationFileHooksListCommand.php  Description This command aims to append configuration file hooks list.</description>
    </item>
    
    <item>
      <title>prestashop:update:sql-upgrade-file-hooks-listing</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-update-sql-upgrade-file-hooks-listing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/console/prestashop-update-sql-upgrade-file-hooks-listing/</guid>
      <description>prestashop:update:sql-upgrade-file-hooks-listing Informations  Path: src/PrestaShopBundle/Command/AppendHooksListForSqlUpgradeFileCommand.php Arguments:  ps-version: PrestaShop version for which the SQL upgrade file will be searched    Description This command aims to add SQL to the SQL upgrade file which contains hook insert operations.</description>
    </item>
    
    <item>
      <title>Price ranges</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/price_ranges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/price_ranges/</guid>
      <description>Resources for Price ranges Price_range    Name Format Required Description     id_carrier isInt ✔️ Carrier ID   delimiter1 isUnsignedFloat ✔️    delimiter2 isUnsignedFloat ✔️     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;price_range&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;id_carrier&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_carrier&amp;gt; &amp;lt;delimiter1&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/delimiter1&amp;gt; &amp;lt;delimiter2&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/delimiter2&amp;gt; &amp;lt;/price_range&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>Processes</title>
      <link>https://devdocs.prestashop.com/1.7/project/maintainers-guide/processes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/maintainers-guide/processes/</guid>
      <description>Processes Security recommendations Maintainer GitHub accounts are granted extended rights on the PrestaShop organization.
We require from maintainers to take the necessary steps to make sure this account is protected. This means, but not only:
 enable 2FA on GitHub use a safe and strong password be very careful about GitHub tokens granting account accesses  </description>
    </item>
    
    <item>
      <title>Product customization fields</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/product_customization_fields/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/product_customization_fields/</guid>
      <description>Resources for Product customization fields Customization_field    Name Format Required Max size Description     id_product isUnsignedId ✔️  Product ID   type isUnsignedId ✔️     required isBool ✔️     is_module isBool ❌     is_deleted isBool ❌     name  ✔️ 255     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;customization_field&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;id_product&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_product&amp;gt; &amp;lt;type&amp;gt;&amp;lt;!</description>
    </item>
    
    <item>
      <title>Product FAQ</title>
      <link>https://devdocs.prestashop.com/1.7/faq/product/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/faq/product/</guid>
      <description>Product FAQ  Product cover  Product cover  Q: How can I override the cover image of my products?
A: By default, when a product is displayed in a list its cover image is used, it is configurable in the BackOffice and is set in product properties via the cover_image_id key. If you want to change this default behaviour you can use the actionGetProductPropertiesAfter in your module and change this key.</description>
    </item>
    
    <item>
      <title>Product feature values</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/product_feature_values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/product_feature_values/</guid>
      <description>Resources for Product feature values Product_feature_value    Name Format Required Max size Description     id_feature isUnsignedId ✔️     custom isBool ❌     value isGenericName ✔️ 255     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;product_feature_value&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;id_feature&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_feature&amp;gt; &amp;lt;custom&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/custom&amp;gt; &amp;lt;value&amp;gt; &amp;lt;language id=&amp;#34;1&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;language id=&amp;#34;2&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;/value&amp;gt; &amp;lt;/product_feature_value&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>Product features</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/product_features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/product_features/</guid>
      <description>Resources for Product features Product_feature    Name Format Required Max size Description     position isInt ❌     name isGenericName ✔️ 128     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;product_feature&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;position&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/position&amp;gt; &amp;lt;name&amp;gt; &amp;lt;language id=&amp;#34;1&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;language id=&amp;#34;2&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;/name&amp;gt; &amp;lt;/product_feature&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>Product option values</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/product_option_values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/product_option_values/</guid>
      <description>Resources for Product option values Product_option_value    Name Format Required Max size Description     id_attribute_group isUnsignedId ✔️     color isColor ❌     position isInt ❌     name isGenericName ✔️ 128     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;product_option_value&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;id_attribute_group&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_attribute_group&amp;gt; &amp;lt;color&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/color&amp;gt; &amp;lt;position&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/position&amp;gt; &amp;lt;name&amp;gt; &amp;lt;language id=&amp;#34;1&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;language id=&amp;#34;2&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;/name&amp;gt; &amp;lt;/product_option_value&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>Product options</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/product_options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/product_options/</guid>
      <description>Resources for Product options Product_option    Name Format Required Max size Description     is_color_group isBool ❌     group_type  ✔️     position isInt ❌     name isGenericName ✔️ 128    public_name isGenericName ✔️ 64    associations  ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;product_option&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;is_color_group&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/is_color_group&amp;gt; &amp;lt;group_type&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/group_type&amp;gt; &amp;lt;position&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/position&amp;gt; &amp;lt;name&amp;gt; &amp;lt;language id=&amp;#34;1&amp;#34;&amp;gt;&amp;lt;!</description>
    </item>
    
    <item>
      <title>Product suppliers</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/product_suppliers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/product_suppliers/</guid>
      <description>Resources for Product suppliers Product_supplier    Name Format Required Max size Description     id_product isUnsignedId ✔️  Product ID   id_product_attribute isUnsignedId ✔️  Product attribute ID   id_supplier isUnsignedId ✔️  Supplier ID   id_currency isUnsignedId ❌  Currency ID   product_supplier_reference isReference ❌ 64    product_supplier_price_te isPrice ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;product_supplier&amp;gt; &amp;lt;id&amp;gt;&amp;lt;!</description>
    </item>
    
    <item>
      <title>Products</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/products/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/products/</guid>
      <description>Resources for Products Product    Name Format Required Writable Max size Not filterable Description     id_manufacturer isUnsignedId ❌ ✔️   Manufacturer ID   id_supplier isUnsignedId ❌ ✔️   Supplier ID   id_category_default isUnsignedId ❌ ✔️      new  ❌ ✔️      cache_default_attribute  ❌ ✔️      id_default_image  ❌ ✔️  true    id_default_combination  ❌ ✔️  true    id_tax_rules_group isUnsignedId ❌ ✔️   Tax rules group ID   position_in_category  ❌ ✔️  true    manufacturer_name  ❌ ❌  true    quantity  ❌ ❌  true    type  ❌ ✔️  true    id_shop_default isUnsignedId ❌ ✔️   Default shop ID   reference isReference ❌ ✔️ 64     supplier_reference isReference ❌ ✔️ 64     location isReference ❌ ✔️ 64     width isUnsignedFloat ❌ ✔️      height isUnsignedFloat ❌ ✔️      depth isUnsignedFloat ❌ ✔️      weight isUnsignedFloat ❌ ✔️      quantity_discount isBool ❌ ✔️      ean13 isEan13 ❌ ✔️ 13     isbn isIsbn ❌ ✔️ 32     upc isUpc ❌ ✔️ 12     mpn isMpn ❌ ✔️ 40     cache_is_pack isBool ❌ ✔️      cache_has_attachments isBool ❌ ✔️      is_virtual isBool ❌ ✔️      state isUnsignedId ❌ ✔️      additional_delivery_times isUnsignedId ❌ ✔️      delivery_in_stock isGenericName ❌ ✔️ 255     delivery_out_stock isGenericName ❌ ✔️ 255     on_sale isBool ❌ ✔️      online_only isBool ❌ ✔️      ecotax isPrice ❌ ✔️      minimal_quantity isUnsignedInt ❌ ✔️      low_stock_threshold isInt ❌ ✔️      low_stock_alert isBool ❌ ✔️      price isPrice ✔️ ✔️      wholesale_price isPrice ❌ ✔️      unity isString ❌ ✔️      unit_price_ratio  ❌ ✔️      additional_shipping_cost isPrice ❌ ✔️      customizable isUnsignedInt ❌ ✔️      text_fields isUnsignedInt ❌ ✔️      uploadable_files isUnsignedInt ❌ ✔️      active isBool ❌ ✔️      redirect_type isString ❌ ✔️      id_type_redirected isUnsignedId ❌ ✔️      available_for_order isBool ❌ ✔️      available_date isDateFormat ❌ ✔️      show_condition isBool ❌ ✔️      condition isGenericName ❌ ✔️      show_price isBool ❌ ✔️      indexed isBool ❌ ✔️      visibility isProductVisibility ❌ ✔️      advanced_stock_management isBool ❌ ✔️      date_add isDate ❌ ✔️      date_upd isDate ❌ ✔️      pack_stock_type isUnsignedInt ❌ ✔️      meta_description isGenericName ❌ ✔️ 512     meta_keywords isGenericName ❌ ✔️ 255     meta_title isGenericName ❌ ✔️ 255     link_rewrite isLinkRewrite ❌ ✔️ 128     name isCatalogName ❌ ✔️ 128     description isCleanHtml ❌ ✔️      description_short isCleanHtml ❌ ✔️      available_now isGenericName ❌ ✔️ 255     available_later IsGenericName ❌ ✔️ 255     associations  ❌ ✔️       Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Reviewing Pull Requests</title>
      <link>https://devdocs.prestashop.com/1.7/project/maintainers-guide/reviewing-pull-requests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/maintainers-guide/reviewing-pull-requests/</guid>
      <description>Reviewing Pull Requests The code review process is generally regarded as a good practice and is adopted by hundreds of software projects around the world.
It provides lot of benefits:
 it helps spotting errors in the code, because we all make mistakes and it can be hard to find one&amp;rsquo;s own mistakes. it helps improving code quality not only by ensuring it&amp;rsquo;s readable and understandable, but also by pinpointing design, performance or security issues that may have been unintentionally introduced by the author.</description>
    </item>
    
    <item>
      <title>Right-To-Left languages</title>
      <link>https://devdocs.prestashop.com/1.7/development/internationalization/rtl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/internationalization/rtl/</guid>
      <description>Right-to-Left languages PrestaShop supports Right-to-Left (RTL) languages natively, both in the Back Office and the Front Office. It can automatically transform themes to make them compatible with RTL languages.
Any Front Office theme can be transformed automatically by PrestaShop. Read &amp;ldquo;RTL support&amp;rdquo; in the Themes section to learn more about this system.
Back Office support The Back Office uses the same &amp;ldquo;theme-flipping&amp;rdquo; system as the Front Office feature. While for Front Office themes the transformation procedure must be triggered manually, in the BO this is performed automatically whenever an RTL language is activated on the shop, either by installing an RTL language or by setting up a language as RTL via edit in the BO.</description>
    </item>
    
    <item>
      <title>RTL support</title>
      <link>https://devdocs.prestashop.com/1.7/themes/reference/rtl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/reference/rtl/</guid>
      <description>RTL support PrestaShop supports RTL (Right-to-left) themes natively.
RTL stylesheets There are two ways of customizing your theme for RTL: either by adding an override file that is only loaded for RTL languages, or by using completely different version of the theme&amp;rsquo;s stylesheets.
CSS override file PrestaShop will try to load a css file named rtl.css after your theme&amp;rsquo;s ones when displayed in an RTL language. You can use this file to place any style override you need for RTL.</description>
    </item>
    
    <item>
      <title>Security policy</title>
      <link>https://devdocs.prestashop.com/1.7/project/security-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/security-policy/</guid>
      <description>Security Policy Obviously, PrestaShop project security is a critical matter. PrestaShop teams are dedicated to keep a high level of security in every aspects of the software.
However a software without vulnerability does not exist, which is why there is a security report process. If you find a security issue, please follow it to responsibly disclose your findings.
Reporting a Vulnerability Security issues can be reported by sending an email to security@prestashop.</description>
    </item>
    
    <item>
      <title>Shipping FAQ</title>
      <link>https://devdocs.prestashop.com/1.7/faq/shipping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/faq/shipping/</guid>
      <description>Shipping FAQ  Shipping information How do I add a service fee to an order?  Shipping information Q: Where and how should I read and write the following informations to be sure that my module is compatible with every shipping modules:
 Tracking number Carrier name Estimated delivery date Real delivery date  A: These details are stored at different places.
Carrier details Information related to a shipping (= delivery method) may be found / stored with the class Carrier.</description>
    </item>
    
    <item>
      <title>Shop groups</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/shop_groups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/shop_groups/</guid>
      <description>Resources for Shop groups Shop_group    Name Format Required Max size Description     name isGenericName ✔️ 64    share_customer isBool ❌     share_order isBool ❌     share_stock isBool ❌     active isBool ❌     deleted isBool ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;shop_group&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/name&amp;gt; &amp;lt;share_customer&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/share_customer&amp;gt; &amp;lt;share_order&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/share_order&amp;gt; &amp;lt;share_stock&amp;gt;&amp;lt;!</description>
    </item>
    
    <item>
      <title>Shop urls</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/shop_urls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/shop_urls/</guid>
      <description>Resources for Shop urls Shop_url    Name Format Required Max size Description     id_shop  ✔️  Shop ID   active isBool ❌     main isBool ❌     domain isCleanHtml ✔️ 255    domain_ssl isCleanHtml ❌ 255    physical_uri  ❌ 64    virtual_uri  ❌ 64     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>ShopChoiceTreeType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/shop-choice-tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/shop-choice-tree/</guid>
      <description>ShopChoiceTreeType The ShopChoiceTreeType is subtype of MaterialChoiceTreeType which is configured to be used for shop association input.
Type options    Option Type Default Description     multiple bool true Whether multiple shops can be selected or not.    Required Javascript components    Component Description     admin-dev/themes/new-theme/js/components/form/choice-tree.js Manages interaction of choice tree    Code example Add ShopChoiceTreeType to your form.</description>
    </item>
    
    <item>
      <title>Shops</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/shops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/shops/</guid>
      <description>Resources for Shops Shop    Name Format Required Max size Description     id_shop_group  ✔️  Shop group ID   id_category  ✔️     active isBool ❌     deleted isBool ❌     name isGenericName ✔️ 64    color isColor ❌     theme_name isThemeName ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Smarty helper functions</title>
      <link>https://devdocs.prestashop.com/1.7/themes/reference/smarty-helpers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/reference/smarty-helpers/</guid>
      <description>Helpers: functions and modifiers PrestaShop 1.7 provides several smarty helper functions and modifiers. See Smarty extensions for a full reference.</description>
    </item>
    
    <item>
      <title>Specific price rules</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/specific_price_rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/specific_price_rules/</guid>
      <description>Resources for Specific price rules Specific_price_rule    Name Format Required Description     id_shop isUnsignedId ✔️ Shop ID   id_country isUnsignedId ✔️ Country ID   id_currency isUnsignedId ✔️ Currency ID   id_group isUnsignedId ✔️    name isCleanHtml ✔️    from_quantity isUnsignedInt ✔️    price isNegativePrice ✔️    reduction isPrice ✔️    reduction_tax isBool ✔️    reduction_type isReductionType ✔️    from isDateFormat ❌    to isDateFormat ❌     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Specific prices</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/specific_prices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/specific_prices/</guid>
      <description>Resources for Specific prices Specific_price    Name Format Required Description     id_shop_group isUnsignedId ❌ Shop group ID   id_shop isUnsignedId ✔️ Shop ID   id_cart isUnsignedId ✔️ Cart ID   id_product isUnsignedId ✔️ Product ID   id_product_attribute isUnsignedId ❌ Product attribute ID   id_currency isUnsignedId ✔️ Currency ID   id_country isUnsignedId ✔️ Country ID   id_group isUnsignedId ✔️    id_customer isUnsignedId ✔️ Customer ID   id_specific_price_rule isUnsignedId ❌    price isNegativePrice ✔️    from_quantity isUnsignedInt ✔️    reduction isPrice ✔️    reduction_tax isBool ✔️    reduction_type isReductionType ✔️    from isDateFormat ✔️    to isDateFormat ✔️     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>States</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/states/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/states/</guid>
      <description>Resources for States State    Name Format Required Max size Description     id_zone isUnsignedId ✔️  Zone ID   id_country isUnsignedId ✔️  Country ID   iso_code isStateIsoCode ✔️ 7    name isGenericName ✔️ 32    active isBool ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;state&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;id_zone&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_zone&amp;gt; &amp;lt;id_country&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_country&amp;gt; &amp;lt;iso_code&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/iso_code&amp;gt; &amp;lt;name&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/name&amp;gt; &amp;lt;active&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/active&amp;gt; &amp;lt;/state&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>Stock availables</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/stock_availables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/stock_availables/</guid>
      <description>Resources for Stock availables Stock_available    Name Format Required Max size Description     id_product isUnsignedId ✔️  Product ID   id_product_attribute isUnsignedId ✔️  Product attribute ID   id_shop isUnsignedId ❌  Shop ID   id_shop_group isUnsignedId ❌  Shop group ID   quantity isInt ✔️     depends_on_stock isBool ✔️     out_of_stock isInt ✔️     location isString ❌ 255     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Stock movement reasons</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/stock_movement_reasons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/stock_movement_reasons/</guid>
      <description>Resources for Stock movement reasons Stock_movement_reason    Name Format Required Max size Description     sign  ❌     deleted  ❌     date_add isDate ❌     date_upd isDate ❌     name isGenericName ✔️ 255     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;stock_movement_reason&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;sign&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/sign&amp;gt; &amp;lt;deleted&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/deleted&amp;gt; &amp;lt;date_add&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/date_add&amp;gt; &amp;lt;date_upd&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/date_upd&amp;gt; &amp;lt;name&amp;gt; &amp;lt;language id=&amp;#34;1&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;language id=&amp;#34;2&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;/name&amp;gt; &amp;lt;/stock_movement_reason&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>Stock movements</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/stock_movements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/stock_movements/</guid>
      <description>Resources for Stock movements Stock_mvt    Name Format Required Description     id_product  ❌ Product ID   id_product_attribute  ❌ Product attribute ID   id_warehouse  ❌ Warehouse ID   id_currency  ❌ Currency ID   management_type  ❌    id_employee isUnsignedId ✔️ Employee ID   id_stock isUnsignedId ✔️    id_stock_mvt_reason isUnsignedId ✔️    id_order isUnsignedId ❌ Order ID   id_supply_order isUnsignedId ❌    product_name  ❌    ean13  ❌    upc  ❌    reference  ❌    mpn  ❌    physical_quantity isUnsignedInt ✔️    sign isInt ✔️    last_wa isPrice ❌    current_wa isPrice ❌    price_te isPrice ✔️    date_add isDate ✔️     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Stocks</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/stocks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/stocks/</guid>
      <description>Resources for Stocks Stock    Name Format Required Writable Not filterable Description     id_warehouse isUnsignedId ✔️ ✔️  Warehouse ID   id_product isUnsignedId ✔️ ✔️  Product ID   id_product_attribute isUnsignedId ✔️ ✔️  Product attribute ID   real_quantity  ❌ ❌ true    reference isReference ❌ ✔️     ean13 isEan13 ❌ ✔️     isbn isIsbn ❌ ✔️     upc isUpc ❌ ✔️     mpn isMpn ❌ ✔️     physical_quantity isUnsignedInt ✔️ ✔️     usable_quantity isInt ✔️ ✔️     price_te isPrice ✔️ ✔️      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Stores</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/stores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/stores/</guid>
      <description>Resources for Stores Store    Name Format Required Max size Description     id_country isUnsignedId ✔️  Country ID   id_state isNullOrUnsignedId ❌  State ID   hours isJson ❌ 65000    postcode  ❌ 12    city isCityName ✔️ 64    latitude isCoordinate ❌ 13    longitude isCoordinate ❌ 13    phone isPhoneNumber ❌ 16    fax isPhoneNumber ❌ 16    email isEmail ❌ 255    active isBool ✔️     date_add isDate ❌     date_upd isDate ❌     name isGenericName ✔️ 255    address1 isAddress ✔️ 255    address2 isAddress ❌ 255    note isCleanHtml ❌ 65000     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Summary of how GitHub Issues and Pull Requests are processed</title>
      <link>https://devdocs.prestashop.com/1.7/project/maintainers-guide/summary-github-lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/maintainers-guide/summary-github-lifecycle/</guid>
      <description>Summary of how GitHub Issues and Pull Requests are processed GitHub is the main tool used by maintainers to manage the PrestaShop project.
This page quickly describes how Issues and Pull Requests are processed on GitHub.
The teams On GitHub, there are mainly three teams working together on the project.
 Product Team: this team takes care of the product vision of the software. It has Product Managers, UX Designers and Wording Managers.</description>
    </item>
    
    <item>
      <title>Suppliers</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/suppliers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/suppliers/</guid>
      <description>Resources for Suppliers Supplier    Name Format Required Max size Description     link_rewrite  ❌     name isCatalogName ✔️ 64    active  ❌     date_add isDate ❌     date_upd isDate ❌     description isCleanHtml ❌     meta_title isGenericName ❌ 255    meta_description isGenericName ❌ 512    meta_keywords isGenericName ❌ 255     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Supply order details</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/supply_order_details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/supply_order_details/</guid>
      <description>Resources for Supply order details Supply_order_detail    Name Format Required Description     id_supply_order isUnsignedId ✔️    id_product isUnsignedId ✔️ Product ID   id_product_attribute isUnsignedId ✔️ Product attribute ID   reference isReference ❌    supplier_reference isReference ❌    name isGenericName ✔️    ean13 isEan13 ❌    isbn isIsbn ❌    upc isUpc ❌    mpn isMpn ❌    exchange_rate isFloat ✔️    unit_price_te isPrice ✔️    quantity_expected isUnsignedInt ✔️    quantity_received isUnsignedInt ❌    price_te isPrice ✔️    discount_rate isFloat ✔️    discount_value_te isPrice ✔️    price_with_discount_te isPrice ✔️    tax_rate isFloat ✔️    tax_value isPrice ✔️    price_ti isPrice ✔️    tax_value_with_order_discount isFloat ✔️    price_with_order_discount_te isPrice ✔️     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Supply order histories</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/supply_order_histories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/supply_order_histories/</guid>
      <description>Resources for Supply order histories Supply_order_history    Name Format Required Description     id_supply_order isUnsignedId ✔️    id_employee isUnsignedId ✔️ Employee ID   id_state isUnsignedId ✔️ State ID   employee_firstname isName ❌    employee_lastname isName ❌    date_add isDate ✔️     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;supply_order_history&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;id_supply_order&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_supply_order&amp;gt; &amp;lt;id_employee&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_employee&amp;gt; &amp;lt;id_state&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_state&amp;gt; &amp;lt;employee_firstname&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/employee_firstname&amp;gt; &amp;lt;employee_lastname&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/employee_lastname&amp;gt; &amp;lt;date_add&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/date_add&amp;gt; &amp;lt;/supply_order_history&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>Supply order receipt histories</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/supply_order_receipt_histories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/supply_order_receipt_histories/</guid>
      <description>Resources for Supply order receipt histories Supply_order_receipt_history    Name Format Required Description     id_supply_order_detail isUnsignedId ✔️    id_employee isUnsignedId ✔️ Employee ID   id_supply_order_state isUnsignedId ✔️    employee_firstname isName ❌    employee_lastname isName ❌    quantity isUnsignedInt ✔️    date_add isDate ❌     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;supply_order_receipt_history&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;id_supply_order_detail&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_supply_order_detail&amp;gt; &amp;lt;id_employee&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_employee&amp;gt; &amp;lt;id_supply_order_state&amp;gt;&amp;lt;!</description>
    </item>
    
    <item>
      <title>Supply order states</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/supply_order_states/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/supply_order_states/</guid>
      <description>Resources for Supply order states Supply_order_state    Name Format Required Max size Description     delivery_note isBool ❌     editable isBool ❌     receipt_state isBool ❌     pending_receipt isBool ❌     enclosed isBool ❌     color isColor ❌     name isGenericName ✔️ 128     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Supply orders</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/supply_orders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/supply_orders/</guid>
      <description>Resources for Supply orders Supply_order    Name Format Required Description     id_supplier isUnsignedId ✔️ Supplier ID   id_lang isUnsignedId ✔️ Lang ID   id_warehouse isUnsignedId ✔️ Warehouse ID   id_supply_order_state isUnsignedId ✔️    id_currency isUnsignedId ✔️ Currency ID   supplier_name isCatalogName ❌    reference isGenericName ✔️    date_delivery_expected isDate ✔️    total_te isPrice ❌    total_with_discount_te isPrice ❌    total_ti isPrice ❌    total_tax isPrice ❌    discount_rate isFloat ❌    discount_value_te isPrice ❌    is_template isBool ❌    date_add isDate ❌    date_upd isDate ❌    associations  ❌     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>SwitchType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/switch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/switch/</guid>
      <description>SwitchType The SwitchType displays a switch with Yes/No values.
Type options    Option Type Default Description     choices array Choices with Yes/No values Choices for switch type   disabled bool false Whether Switch should be disabled or not    Required Javascript components None.
Code example Add SwitchType to your form.
&amp;lt;?php use Symfony\Component\Form\AbstractType; use PrestaShopBundle\Form\Admin\Type\SwitchType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder-&amp;gt;add(&amp;#39;switch&amp;#39;, SwitchType::class, [ // Customized choices with ON/OFF instead of Yes/No  &amp;#39;choices&amp;#39; =&amp;gt; [ &amp;#39;ON&amp;#39; =&amp;gt; true, &amp;#39;OFF&amp;#39; =&amp;gt; false, ], ]); } } Preview example   SwitchType rendered in form   </description>
    </item>
    
    <item>
      <title>Tags</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/tags/</guid>
      <description>Resources for Tags Tag    Name Format Required Max size Description     id_lang isUnsignedId ✔️  Lang ID   name isGenericName ✔️ 32     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;tag&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;id_lang&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_lang&amp;gt; &amp;lt;name&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/name&amp;gt; &amp;lt;/tag&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>Tax rule groups</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/tax_rule_groups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/tax_rule_groups/</guid>
      <description>Resources for Tax rule groups Tax_rule_group    Name Format Required Max size Description     name isGenericName ✔️ 64    active isBool ❌     deleted isBool ❌     date_add isDate ❌     date_upd isDate ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;tax_rule_group&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/name&amp;gt; &amp;lt;active&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/active&amp;gt; &amp;lt;deleted&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/deleted&amp;gt; &amp;lt;date_add&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/date_add&amp;gt; &amp;lt;date_upd&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/date_upd&amp;gt; &amp;lt;/tax_rule_group&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>Tax rules</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/tax_rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/tax_rules/</guid>
      <description>Resources for Tax rules Tax_rule    Name Format Required Description     id_tax_rules_group isUnsignedId ✔️ Tax rules group ID   id_state isUnsignedId ❌ State ID   id_country isUnsignedId ✔️ Country ID   zipcode_from isPostCode ❌    zipcode_to isPostCode ❌    id_tax isUnsignedId ✔️    behavior isUnsignedInt ❌    description isString ❌     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Taxes</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/taxes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/taxes/</guid>
      <description>Resources for Taxes Tax    Name Format Required Max size Description     rate isFloat ✔️     active  ❌     deleted  ❌     name isGenericName ✔️ 32     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;tax&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;rate&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/rate&amp;gt; &amp;lt;active&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/active&amp;gt; &amp;lt;deleted&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/deleted&amp;gt; &amp;lt;name&amp;gt; &amp;lt;language id=&amp;#34;1&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;language id=&amp;#34;2&amp;#34;&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/language&amp;gt; &amp;lt;/name&amp;gt; &amp;lt;/tax&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>TextWithLengthCounterType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/text-with-length-counter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/text-with-length-counter/</guid>
      <description>TextWithLengthCounterType The TextWithLengthCounterType represents text input with value length counter.
Type options    Option Type Default Description     max_length int None, must be configured Max length of input value   position string before Configures position for counter. Available options are: before and after   input string text Configured input type text or textarea    Required Javascript components    Component Description     admin-dev/themes/new-theme/js/components/form/text-with-length-counter.</description>
    </item>
    
    <item>
      <title>TextWithUnitType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/text-with-unit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/text-with-unit/</guid>
      <description>TextWithUnitType The TextWithUnitType represents text input with unit value (e.g. Kg, Cm &amp;amp; etc.).
Type options    Option Type Default Description     unit string unit Type of unit (e.g. Kg, Cm &amp;amp; etc)    Required Javascript components None.
Code example Add TextWithUnitType to your form and optionally you can configure unit for it.
&amp;lt;?php use Symfony\Component\Form\AbstractType; use PrestaShopBundle\Form\Admin\Type\TextWithUnitType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder-&amp;gt;add(&amp;#39;weight&amp;#39;, TextWithUnitType::class, [ &amp;#39;unit&amp;#39; =&amp;gt; &amp;#39;kg&amp;#39;, &amp;#39;required&amp;#39; =&amp;gt; false, &amp;#39;empty_data&amp;#39; =&amp;gt; &amp;#39;0&amp;#39;, ]) ; } } Preview example   TextWithUnitType rendered in form   </description>
    </item>
    
    <item>
      <title>The Faceted Search component</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/faceted-search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/faceted-search/</guid>
      <description>The Faceted Search Architecture This document describes the faceted search architecture that is being implemented in PrestaShop 1.7.
Please also read the extensive comments in classes/controller/ProductListingFrontControllerCore, as this document is only a high-level explanation.
The target audience is anybody who wants to develop a well-integrated search module that replaces the way the PrestaShop core searches for products.
At the moment this proof of concept works only on the CategoryController but it is easy to extend to the other product controllers (manufacturers, supplier&amp;hellip;).</description>
    </item>
    
    <item>
      <title>Theme translation</title>
      <link>https://devdocs.prestashop.com/1.7/themes/reference/theme-translation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/reference/theme-translation/</guid>
      <description>How to translate your theme PrestaShop 1.7 comes with a new translation system for themes.
The following instructions only apply to PrestaShop 1.7.2 and later. In previous versions, exported themes didn&amp;rsquo;t include the selected and included translations. 1. Add new or customize existing wordings in a theme Adding new wordings is easy when building your theme. You simply need to edit the .tpl file of your choice and add (or customize) a wording.</description>
    </item>
    
    <item>
      <title>TinyMCE</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/tinymce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/tinymce/</guid>
      <description>Modify the TinyMCE configuration You are able to modify the configuration by using the actionAdminControllerSetMedia hook.
Inside the JS file you added with this hook, you need to create a global object containing your custom configuration:
window.defaultTinyMceConfig = { [...] } and as you can see in the tinymce core file it will load it instead of the default core configuration.
Keep in mind that the config is not completely replaced, it&amp;rsquo;s an Object.</description>
    </item>
    
    <item>
      <title>Tips and tricks</title>
      <link>https://devdocs.prestashop.com/1.7/development/internationalization/translation/translation-tips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/internationalization/translation/translation-tips/</guid>
      <description>Translation tips and tricks Adding new wordings Wordings for the Core and Native modules can only be translated if they are declared in PrestaShop&amp;rsquo;s default translation catalogue. Therefore, whenever a new wording is added to the core or to a native module, it must be added to the default catalogue as well.
Normally you would have to manually add each wording the appropriate default catalogue files (located in the app/Resources/translations/default folder).</description>
    </item>
    
    <item>
      <title>TranslatableType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/translatable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/translatable/</guid>
      <description>TranslatableType The TranslatableType allows you to configure multilanguage input. This multilanguage behavior is provided on top of an existing input Type.
Type options    Option Type Default Description     type string Symfony\Component\Form\Extension\Core\Type\TextType Type that you want to be translatable   options array Empty array Options for configured type   locales array Enabled shop locales (languages) Locales in which field can be translated    If you wish to use FormattedTextareaType as type, your base type must be TranslateType instead of TranslatableType.</description>
    </item>
    
    <item>
      <title>Translated configurations</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/translated_configurations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/translated_configurations/</guid>
      <description>Resources for Translated configurations Translated_configuration    Name Format Required Max size Description     value  ❌     date_add isDate ❌     date_upd isDate ❌     name isConfigName ✔️ 32    id_shop_group isUnsignedId ❌  Shop group ID   id_shop isUnsignedId ❌  Shop ID    Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;translated_configuration&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;value&amp;gt; &amp;lt;language id=&amp;#34;1&amp;#34;&amp;gt;&amp;lt;!</description>
    </item>
    
    <item>
      <title>Upgrade FAQ</title>
      <link>https://devdocs.prestashop.com/1.7/faq/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/faq/upgrade/</guid>
      <description>Upgrade FAQ  After upgrading, I lost access to some Back-Office pages Upgrade fails with Error message JqXHR  Restore access to Back Office Page Q: After upgrading my PrestaShop to a new version, I lost access to some Back-Office pages. How can I fix it?
A: It is likely that some SQL configuration is not correct.
First, identify what is the slug of the Back Office pages. You can find them into the SQL table ps_authorization_role.</description>
    </item>
    
    <item>
      <title>Version pill</title>
      <link>https://devdocs.prestashop.com/1.7/contribute/documentation/shortcodes/minver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/contribute/documentation/shortcodes/minver/</guid>
      <description>Version pill When highlighting a new feature, you may want to highlight the version on which that feature was added. You can add a version pill using minver:
Everything&amp;#39;s better on {{&amp;lt; minver v=&amp;#34;1.7.4&amp;#34; &amp;gt;}} Which renders to:
Everything&amp;rsquo;s better on 1.7.4 
 To align a pill with a title, use the parameter title=&amp;quot;true&amp;quot;:
#### Example title {{&amp;lt; minver v=&amp;#34;1.7.4&amp;#34; title=&amp;#34;true&amp;#34;&amp;gt;}} Which is rendered like this:
Example title   </description>
    </item>
    
    <item>
      <title>Warehouse product locations</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/warehouse_product_locations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/warehouse_product_locations/</guid>
      <description>Resources for Warehouse product locations Warehouse_product_location    Name Format Required Max size Description     id_product isUnsignedId ✔️  Product ID   id_product_attribute isUnsignedId ✔️  Product attribute ID   id_warehouse isUnsignedId ✔️  Warehouse ID   location isReference ❌ 64     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;warehouse_product_location&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;id_product&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_product&amp;gt; &amp;lt;id_product_attribute&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_product_attribute&amp;gt; &amp;lt;id_warehouse&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_warehouse&amp;gt; &amp;lt;location&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/location&amp;gt; &amp;lt;/warehouse_product_location&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>Warehouses</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/warehouses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/warehouses/</guid>
      <description>Resources for Warehouses Warehouse    Name Format Required Writable Max size Not filterable Description     id_address isUnsignedId ✔️ ✔️      id_employee isUnsignedId ✔️ ✔️   Employee ID   id_currency isUnsignedId ✔️ ✔️   Currency ID   valuation  ❌ ❌  true    deleted  ❌ ✔️      reference isString ✔️ ✔️ 64     name isString ✔️ ✔️ 45     management_type isStockManagement ✔️ ✔️      associations  ❌ ✔️       Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Webpack</title>
      <link>https://devdocs.prestashop.com/1.7/themes/getting-started/asset-management/webpack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/themes/getting-started/asset-management/webpack/</guid>
      <description>About Webpack  Webpack is a module bundler. Webpack takes modules with dependencies and generates static assets representing those modules.
 The main interest of using Webpack is that it will compile all your styles - which we advise you to write using Sass  - into a single CSS file. This way, your theme will make only one HTTP request for this single file, and since your browser will cache it for later re-use, it will even download this file only once.</description>
    </item>
    
    <item>
      <title>Weight ranges</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/weight_ranges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/weight_ranges/</guid>
      <description>Resources for Weight ranges Weight_range    Name Format Required Description     id_carrier isInt ✔️ Carrier ID   delimiter1 isUnsignedFloat ✔️    delimiter2 isUnsignedFloat ✔️     Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;weight_range&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;id_carrier&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id_carrier&amp;gt; &amp;lt;delimiter1&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/delimiter1&amp;gt; &amp;lt;delimiter2&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/delimiter2&amp;gt; &amp;lt;/weight_range&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
    <item>
      <title>YesAndNoChoiceType</title>
      <link>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/yes-and-no-choice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/components/form/types-reference/yes-and-no-choice/</guid>
      <description>YesAndNoChoiceType The YesAndNoChoiceType represents select input with options Yes and No.
Type options    Option Type Default Description     choices array array By default Yes/No choices are defined   required boolean false Whether field is required or not    Required Javascript components None.
Preview example   YesAndNoChoiceType rendered in form   </description>
    </item>
    
    <item>
      <title>Zones</title>
      <link>https://devdocs.prestashop.com/1.7/webservice/resources/zones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/webservice/resources/zones/</guid>
      <description>Resources for Zones Zone    Name Format Required Max size Description     name isGenericName ✔️ 64    active isBool ❌      Blank schema &amp;lt;prestashop xmlns:xlink=&amp;#34;http://www.w3.org/1999/xlink&amp;#34;&amp;gt; &amp;lt;zone&amp;gt; &amp;lt;id&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/name&amp;gt; &amp;lt;active&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/active&amp;gt; &amp;lt;/zone&amp;gt; &amp;lt;/prestashop&amp;gt; </description>
    </item>
    
  </channel>
</rss>
