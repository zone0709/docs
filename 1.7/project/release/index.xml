<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Release on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop.com/1.7/project/release/</link>
    <description>Recent content in Release on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://devdocs.prestashop.com/1.7/project/release/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Minor release lifecycle</title>
      <link>https://devdocs.prestashop.com/1.7/project/release/patch-release-lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/release/patch-release-lifecycle/</guid>
      <description>Minor release lifecycle Kanban and scope Each minor version is defined by a feature scope, that is, a number of GitHub issues that we put in a version Kanban. How these issues are picked or sorted is the responsibility of the Product Team, who spends a lot of time gathering feedback from the PrestaShop community to make sure the next minor version addresses the most important needs.
For example PrestaShop 1.</description>
    </item>
    
    <item>
      <title>Patch release lifecycle</title>
      <link>https://devdocs.prestashop.com/1.7/project/release/minor-release-lifecycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/release/minor-release-lifecycle/</guid>
      <description>Patch release lifecycle Patch releases are &amp;ldquo;maintainance&amp;rdquo; releases: they provide bug fixes and security patches, but do not provide enhancements or new features. They are part of a necessary maintenance process.
Scope of maintainance When a minor version is released, such as PrestaShop 1.7.7.0, the related branch becomes the latest and maintained branch. This means that, when PrestaShop 1.7.7.0 is out:
 There will be no more PrestaShop 1.7.6 patch releases, for either bug or security issues There might be, if necessary, patch releases for PrestaShop 1.</description>
    </item>
    
    <item>
      <title>Release a native PrestaShop module</title>
      <link>https://devdocs.prestashop.com/1.7/project/release/release-a-native-ps-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/project/release/release-a-native-ps-module/</guid>
      <description>Release a new version of a native PrestaShop module Some modules are embedded within PrestaShop ZIP archives and loaded through Composer package manager. They consequently are listed in the composer.json of the Core project.
This is what we call &amp;ldquo;native PrestaShop modules&amp;rdquo;. The source code of these modules is hosted on GitHub.
This page explains what is needed to release these modules.
Requirements Mandatory requirements The module should be valid which means:</description>
    </item>
    
  </channel>
</rss>
